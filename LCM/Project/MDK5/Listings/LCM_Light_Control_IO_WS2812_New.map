Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    keil_startup_hk32f030m.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    keil_startup_hk32f030m.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    keil_startup_hk32f030m.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    keil_startup_hk32f030m.o(RESET) refers to keil_startup_hk32f030m.o(STACK) for __initial_sp
    keil_startup_hk32f030m.o(RESET) refers to keil_startup_hk32f030m.o(.text) for Reset_Handler
    keil_startup_hk32f030m.o(RESET) refers to hk32f030m_it.o(.text.NMI_Handler) for NMI_Handler
    keil_startup_hk32f030m.o(RESET) refers to hk32f030m_it.o(.text.HardFault_Handler) for HardFault_Handler
    keil_startup_hk32f030m.o(RESET) refers to hk32f030m_it.o(.text.SVC_Handler) for SVC_Handler
    keil_startup_hk32f030m.o(RESET) refers to hk32f030m_it.o(.text.PendSV_Handler) for PendSV_Handler
    keil_startup_hk32f030m.o(RESET) refers to hk32f030m_it.o(.text.SysTick_Handler) for SysTick_Handler
    keil_startup_hk32f030m.o(RESET) refers to hk32f030m_it.o(.text.TIM6_IRQHandler) for TIM6_IRQHandler
    keil_startup_hk32f030m.o(RESET) refers to hk32f030m_it.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    keil_startup_hk32f030m.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    keil_startup_hk32f030m.o(.text) refers to system_hk32f030m.o(.text.SystemInit) for SystemInit
    keil_startup_hk32f030m.o(.text) refers to __main.o(!!!main) for __main
    keil_startup_hk32f030m.o(.text) refers to keil_startup_hk32f030m.o(HEAP) for Heap_Mem
    keil_startup_hk32f030m.o(.text) refers to keil_startup_hk32f030m.o(STACK) for Stack_Mem
    main.o(.text.main) refers to led.o(.text.LED_Init) for LED_Init
    main.o(.text.main) refers to buzzer.o(.text.Buzzer_Init) for Buzzer_Init
    main.o(.text.main) refers to adc.o(.text.ADC1_Init) for ADC1_Init
    main.o(.text.main) refers to ws2812.o(.text.WS2812_Init) for WS2812_Init
    main.o(.text.main) refers to power.o(.text.Power_Init) for Power_Init
    main.o(.text.main) refers to key.o(.text.KEY_Init) for KEY_Init
    main.o(.text.main) refers to usart.o(.text.USART1_Init) for USART1_Init
    main.o(.text.main) refers to led_pwm.o(.text.LED_PWM_Init) for LED_PWM_Init
    main.o(.text.main) refers to time.o(.text.Time6_Init) for Time6_Init
    main.o(.text.main) refers to task.o(.text.KEY1_Task) for KEY1_Task
    main.o(.text.main) refers to task.o(.text.WS2812_Task) for WS2812_Task
    main.o(.text.main) refers to task.o(.text.Power_Task) for Power_Task
    main.o(.text.main) refers to task.o(.text.Charge_Task) for Charge_Task
    main.o(.text.main) refers to task.o(.text.Flashlight_Task) for Flashlight_Task
    main.o(.text.main) refers to task.o(.text.Flashlight_Detection) for Flashlight_Detection
    main.o(.text.main) refers to task.o(.text.Buzzer_Task) for Buzzer_Task
    main.o(.text.main) refers to task.o(.text.Usart_Task) for Usart_Task
    main.o(.text.main) refers to task.o(.text.ADC_Task) for ADC_Task
    main.o(.text.main) refers to task.o(.text.Conditional_Judgment) for Conditional_Judgment
    main.o(.text.main) refers to key.o(.bss.KEY1_State) for KEY1_State
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    hk32f030m_it.o(.ARM.exidx.text.NMI_Handler) refers to hk32f030m_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    hk32f030m_it.o(.ARM.exidx.text.HardFault_Handler) refers to hk32f030m_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    hk32f030m_it.o(.ARM.exidx.text.SVC_Handler) refers to hk32f030m_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    hk32f030m_it.o(.ARM.exidx.text.PendSV_Handler) refers to hk32f030m_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    hk32f030m_it.o(.ARM.exidx.text.SysTick_Handler) refers to hk32f030m_it.o(.text.SysTick_Handler) for [Anonymous Symbol]
    hk32f030m_it.o(.text.TIM6_IRQHandler) refers to hk32f030m_tim.o(.text.TIM_GetITStatus) for TIM_GetITStatus
    hk32f030m_it.o(.text.TIM6_IRQHandler) refers to hk32f030m_tim.o(.text.TIM_ClearITPendingBit) for TIM_ClearITPendingBit
    hk32f030m_it.o(.text.TIM6_IRQHandler) refers to key.o(.text.KEY1_Scan) for KEY1_Scan
    hk32f030m_it.o(.text.TIM6_IRQHandler) refers to buzzer.o(.text.Buzzer_Scan) for Buzzer_Scan
    hk32f030m_it.o(.text.TIM6_IRQHandler) refers to led.o(.bss.LED_Counter) for LED_Counter
    hk32f030m_it.o(.text.TIM6_IRQHandler) refers to ws2812.o(.bss.WS2812_Counter) for WS2812_Counter
    hk32f030m_it.o(.text.TIM6_IRQHandler) refers to flag_bit.o(.bss.VESC_Boot_Time) for VESC_Boot_Time
    hk32f030m_it.o(.text.TIM6_IRQHandler) refers to flag_bit.o(.bss.Buzzer_Time) for Buzzer_Time
    hk32f030m_it.o(.text.TIM6_IRQHandler) refers to flag_bit.o(.bss.Charge_Time) for Charge_Time
    hk32f030m_it.o(.text.TIM6_IRQHandler) refers to flag_bit.o(.bss.Flashlight_Time) for Flashlight_Time
    hk32f030m_it.o(.text.TIM6_IRQHandler) refers to flag_bit.o(.bss.Power_Time) for Power_Time
    hk32f030m_it.o(.text.TIM6_IRQHandler) refers to flag_bit.o(.bss.Usart_Time) for Usart_Time
    hk32f030m_it.o(.text.TIM6_IRQHandler) refers to flag_bit.o(.bss.ADC_Time) for ADC_Time
    hk32f030m_it.o(.text.TIM6_IRQHandler) refers to flag_bit.o(.bss.Shutdown_Time_S) for Shutdown_Time_S
    hk32f030m_it.o(.text.TIM6_IRQHandler) refers to flag_bit.o(.bss.Flashlight_Detection_Time) for Flashlight_Detection_Time
    hk32f030m_it.o(.text.TIM6_IRQHandler) refers to flag_bit.o(.bss.Charger_Detection_1ms) for Charger_Detection_1ms
    hk32f030m_it.o(.ARM.exidx.text.TIM6_IRQHandler) refers to hk32f030m_it.o(.text.TIM6_IRQHandler) for [Anonymous Symbol]
    hk32f030m_it.o(.text.USART1_IRQHandler) refers to hk32f030m_usart.o(.text.USART_ClearFlag) for USART_ClearFlag
    hk32f030m_it.o(.text.USART1_IRQHandler) refers to hk32f030m_usart.o(.text.USART_ReceiveData) for USART_ReceiveData
    hk32f030m_it.o(.text.USART1_IRQHandler) refers to hk32f030m_it.o(.bss.USART1_IRQHandler.count) for [Anonymous Symbol]
    hk32f030m_it.o(.text.USART1_IRQHandler) refers to vesc_uasrt.o(.bss.VESC_RX_Buff) for VESC_RX_Buff
    hk32f030m_it.o(.text.USART1_IRQHandler) refers to vesc_uasrt.o(.bss.VESC_RX_Flag) for VESC_RX_Flag
    hk32f030m_it.o(.ARM.exidx.text.USART1_IRQHandler) refers to hk32f030m_it.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    system_hk32f030m.o(.ARM.exidx.text.SystemInit) refers to system_hk32f030m.o(.text.SystemInit) for [Anonymous Symbol]
    system_hk32f030m.o(.text.SystemCoreClockUpdate) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    system_hk32f030m.o(.text.SystemCoreClockUpdate) refers to system_hk32f030m.o(.data.SystemCoreClock) for SystemCoreClock
    system_hk32f030m.o(.text.SystemCoreClockUpdate) refers to hk32f030m_rcc.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_hk32f030m.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_hk32f030m.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    ws2812.o(.text.WS2812_Init) refers to io_ws2812.o(.text.IO_WS2812_Init) for IO_WS2812_Init
    ws2812.o(.text.WS2812_Init) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    ws2812.o(.text.WS2812_Init) refers to ws2812.o(.bss.WS2812_Buff) for WS2812_Buff
    ws2812.o(.ARM.exidx.text.WS2812_Init) refers to ws2812.o(.text.WS2812_Init) for [Anonymous Symbol]
    ws2812.o(.text.WS2812_Set_Colour) refers to ws2812.o(.bss.WS2812_Buff) for WS2812_Buff
    ws2812.o(.ARM.exidx.text.WS2812_Set_Colour) refers to ws2812.o(.text.WS2812_Set_Colour) for [Anonymous Symbol]
    ws2812.o(.text.WS2812_Left) refers to ws2812.o(.bss.WS2812_Buff) for WS2812_Buff
    ws2812.o(.ARM.exidx.text.WS2812_Left) refers to ws2812.o(.text.WS2812_Left) for [Anonymous Symbol]
    ws2812.o(.ARM.exidx.text.delay) refers to ws2812.o(.text.delay) for [Anonymous Symbol]
    ws2812.o(.text.WS2812_Refresh) refers to io_ws2812.o(.text.WS2812_1_Code) for WS2812_1_Code
    ws2812.o(.text.WS2812_Refresh) refers to io_ws2812.o(.text.WS2812_0_Code) for WS2812_0_Code
    ws2812.o(.text.WS2812_Refresh) refers to ws2812.o(.bss.WS2812_Buff) for WS2812_Buff
    ws2812.o(.ARM.exidx.text.WS2812_Refresh) refers to ws2812.o(.text.WS2812_Refresh) for [Anonymous Symbol]
    crc.o(.text.crc16) refers to crc.o(.rodata.crc16_tab) for crc16_tab
    crc.o(.ARM.exidx.text.crc16) refers to crc.o(.text.crc16) for [Anonymous Symbol]
    vesc_uasrt.o(.text.Send_Pack_Data) refers to crc.o(.text.crc16) for crc16
    vesc_uasrt.o(.text.Send_Pack_Data) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    vesc_uasrt.o(.text.Send_Pack_Data) refers to usart.o(.text.USART1_Send_Bytes) for USART1_Send_Bytes
    vesc_uasrt.o(.text.Send_Pack_Data) refers to vesc_uasrt.o(.bss.protocol_buff) for protocol_buff
    vesc_uasrt.o(.ARM.exidx.text.Send_Pack_Data) refers to vesc_uasrt.o(.text.Send_Pack_Data) for [Anonymous Symbol]
    vesc_uasrt.o(.text.Get_Vesc_Pack_Data) refers to crc.o(.text.crc16) for crc16
    vesc_uasrt.o(.text.Get_Vesc_Pack_Data) refers to usart.o(.text.USART1_Send_Bytes) for USART1_Send_Bytes
    vesc_uasrt.o(.text.Get_Vesc_Pack_Data) refers to vesc_uasrt.o(.bss.protocol_buff) for protocol_buff
    vesc_uasrt.o(.ARM.exidx.text.Get_Vesc_Pack_Data) refers to vesc_uasrt.o(.text.Get_Vesc_Pack_Data) for [Anonymous Symbol]
    vesc_uasrt.o(.ARM.exidx.text.buffer_get_int16) refers to vesc_uasrt.o(.text.buffer_get_int16) for [Anonymous Symbol]
    vesc_uasrt.o(.ARM.exidx.text.buffer_get_uint16) refers to vesc_uasrt.o(.text.buffer_get_uint16) for [Anonymous Symbol]
    vesc_uasrt.o(.ARM.exidx.text.buffer_get_int32) refers to vesc_uasrt.o(.text.buffer_get_int32) for [Anonymous Symbol]
    vesc_uasrt.o(.ARM.exidx.text.buffer_get_uint32) refers to vesc_uasrt.o(.text.buffer_get_uint32) for [Anonymous Symbol]
    vesc_uasrt.o(.text.buffer_get_float16) refers to fflti.o(.text) for __aeabi_i2f
    vesc_uasrt.o(.text.buffer_get_float16) refers to fdiv.o(.text) for __aeabi_fdiv
    vesc_uasrt.o(.ARM.exidx.text.buffer_get_float16) refers to vesc_uasrt.o(.text.buffer_get_float16) for [Anonymous Symbol]
    vesc_uasrt.o(.text.buffer_get_float32) refers to fflti.o(.text) for __aeabi_i2f
    vesc_uasrt.o(.text.buffer_get_float32) refers to fdiv.o(.text) for __aeabi_fdiv
    vesc_uasrt.o(.ARM.exidx.text.buffer_get_float32) refers to vesc_uasrt.o(.text.buffer_get_float32) for [Anonymous Symbol]
    vesc_uasrt.o(.text.Protocol_Parse) refers to crc.o(.text.crc16) for crc16
    vesc_uasrt.o(.text.Protocol_Parse) refers to fflti.o(.text) for __aeabi_i2f
    vesc_uasrt.o(.text.Protocol_Parse) refers to fdiv.o(.text) for __aeabi_fdiv
    vesc_uasrt.o(.text.Protocol_Parse) refers to flag_bit.o(.bss.Gear_Position) for Gear_Position
    vesc_uasrt.o(.text.Protocol_Parse) refers to flag_bit.o(.bss.WS2812_Measure) for WS2812_Measure
    vesc_uasrt.o(.text.Protocol_Parse) refers to vesc_uasrt.o(.bss.data) for data
    vesc_uasrt.o(.ARM.exidx.text.Protocol_Parse) refers to vesc_uasrt.o(.text.Protocol_Parse) for [Anonymous Symbol]
    test.o(.text.Test_Charge) refers to adc.o(.text.Read_ADC_Value) for Read_ADC_Value
    test.o(.text.Test_Charge) refers to dflti.o(.text) for __aeabi_ui2d
    test.o(.text.Test_Charge) refers to dmul.o(.text) for __aeabi_dmul
    test.o(.text.Test_Charge) refers to d2f.o(.text) for __aeabi_d2f
    test.o(.text.Test_Charge) refers to fcmp.o(i._fleq) for __aeabi_fcmple
    test.o(.text.Test_Charge) refers to fcmp.o(i._fgeq) for __aeabi_fcmpge
    test.o(.text.Test_Charge) refers to test.o(.bss.Test_Charge.test_charge) for [Anonymous Symbol]
    test.o(.text.Test_Charge) refers to test.o(.bss.Test_Counter) for Test_Counter
    test.o(.ARM.exidx.text.Test_Charge) refers to test.o(.text.Test_Charge) for [Anonymous Symbol]
    test.o(.text.Test_LED) refers to hk32f030m_tim.o(.text.TIM_SetCompare2) for TIM_SetCompare2
    test.o(.text.Test_LED) refers to test.o(.bss.Test_LED.test_led) for [Anonymous Symbol]
    test.o(.text.Test_LED) refers to test.o(.bss.Test_LED.led_b_f) for [Anonymous Symbol]
    test.o(.text.Test_LED) refers to test.o(.bss.Test_Counter) for Test_Counter
    test.o(.text.Test_LED) refers to test.o(.bss.Test_LED.pwm_st) for [Anonymous Symbol]
    test.o(.text.Test_LED) refers to test.o(.bss.Test_LED.led_pwm) for [Anonymous Symbol]
    test.o(.text.Test_LED) refers to test.o(.bss.Test_LED.pwm_cnt) for [Anonymous Symbol]
    test.o(.ARM.exidx.text.Test_LED) refers to test.o(.text.Test_LED) for [Anonymous Symbol]
    test.o(.text.Test_USART) refers to vesc_uasrt.o(.text.Get_Vesc_Pack_Data) for Get_Vesc_Pack_Data
    test.o(.text.Test_USART) refers to vesc_uasrt.o(.text.Protocol_Parse) for Protocol_Parse
    test.o(.text.Test_USART) refers to test.o(.bss.Test_USART.test_usart) for [Anonymous Symbol]
    test.o(.text.Test_USART) refers to vesc_uasrt.o(.bss.VESC_RX_Flag) for VESC_RX_Flag
    test.o(.text.Test_USART) refers to test.o(.bss.Test_Counter) for Test_Counter
    test.o(.text.Test_USART) refers to vesc_uasrt.o(.bss.VESC_RX_Buff) for VESC_RX_Buff
    test.o(.ARM.exidx.text.Test_USART) refers to test.o(.text.Test_USART) for [Anonymous Symbol]
    test.o(.text.Test_ADC) refers to adc.o(.text.Read_ADC_Value) for Read_ADC_Value
    test.o(.text.Test_ADC) refers to dflti.o(.text) for __aeabi_ui2d
    test.o(.text.Test_ADC) refers to dmul.o(.text) for __aeabi_dmul
    test.o(.text.Test_ADC) refers to d2f.o(.text) for __aeabi_d2f
    test.o(.text.Test_ADC) refers to test.o(.bss.Test_ADC.test_adc) for [Anonymous Symbol]
    test.o(.text.Test_ADC) refers to test.o(.bss.adc1_voltage) for adc1_voltage
    test.o(.text.Test_ADC) refers to test.o(.bss.adc2_voltage) for adc2_voltage
    test.o(.text.Test_ADC) refers to test.o(.bss.Test_Counter) for Test_Counter
    test.o(.text.Test_ADC) refers to test.o(.bss.charge_voltage) for charge_voltage
    test.o(.ARM.exidx.text.Test_ADC) refers to test.o(.text.Test_ADC) for [Anonymous Symbol]
    test.o(.text.Test_Task) refers to test.o(.text.Test_Charge) for Test_Charge
    test.o(.text.Test_Task) refers to test.o(.text.Test_LED) for Test_LED
    test.o(.text.Test_Task) refers to vesc_uasrt.o(.text.Get_Vesc_Pack_Data) for Get_Vesc_Pack_Data
    test.o(.text.Test_Task) refers to test.o(.text.Test_ADC) for Test_ADC
    test.o(.text.Test_Task) refers to vesc_uasrt.o(.text.Protocol_Parse) for Protocol_Parse
    test.o(.text.Test_Task) refers to test.o(.bss.Test_Step) for Test_Step
    test.o(.text.Test_Task) refers to test.o(.bss.Test_USART.test_usart) for [Anonymous Symbol]
    test.o(.text.Test_Task) refers to vesc_uasrt.o(.bss.VESC_RX_Flag) for VESC_RX_Flag
    test.o(.text.Test_Task) refers to test.o(.bss.Test_Counter) for Test_Counter
    test.o(.text.Test_Task) refers to vesc_uasrt.o(.bss.VESC_RX_Buff) for VESC_RX_Buff
    test.o(.ARM.exidx.text.Test_Task) refers to test.o(.text.Test_Task) for [Anonymous Symbol]
    task.o(.ARM.exidx.text.LED_Task) refers to task.o(.text.LED_Task) for [Anonymous Symbol]
    task.o(.text.KEY1_Task) refers to flag_bit.o(.bss.Power_Flag) for Power_Flag
    task.o(.text.KEY1_Task) refers to key.o(.bss.KEY1_State) for KEY1_State
    task.o(.text.KEY1_Task) refers to flag_bit.o(.bss.Buzzer_Flag) for Buzzer_Flag
    task.o(.text.KEY1_Task) refers to flag_bit.o(.bss.Flashlight_Flag) for Flashlight_Flag
    task.o(.text.KEY1_Task) refers to flag_bit.o(.bss.Lightbar_Mode_Flag) for Lightbar_Mode_Flag
    task.o(.text.KEY1_Task) refers to flag_bit.o(.bss.Gear_Position) for Gear_Position
    task.o(.ARM.exidx.text.KEY1_Task) refers to task.o(.text.KEY1_Task) for [Anonymous Symbol]
    task.o(.text.Power_Display) refers to ws2812.o(.text.WS2812_Set_Colour) for WS2812_Set_Colour
    task.o(.text.Power_Display) refers to ws2812.o(.text.WS2812_Refresh) for WS2812_Refresh
    task.o(.text.Power_Display) refers to flag_bit.o(.bss.Power_Display_Flag) for Power_Display_Flag
    task.o(.text.Power_Display) refers to flag_bit.o(.bss.WS2812_Measure) for WS2812_Measure
    task.o(.ARM.exidx.text.Power_Display) refers to task.o(.text.Power_Display) for [Anonymous Symbol]
    task.o(.text.Sensor_Activation_Diplay) refers to ws2812.o(.text.WS2812_Set_Colour) for WS2812_Set_Colour
    task.o(.text.Sensor_Activation_Diplay) refers to ws2812.o(.text.WS2812_Refresh) for WS2812_Refresh
    task.o(.text.Sensor_Activation_Diplay) refers to flag_bit.o(.bss.Footpad_Activation_Flag) for Footpad_Activation_Flag
    task.o(.text.Sensor_Activation_Diplay) refers to flag_bit.o(.bss.WS2812_Measure) for WS2812_Measure
    task.o(.ARM.exidx.text.Sensor_Activation_Diplay) refers to task.o(.text.Sensor_Activation_Diplay) for [Anonymous Symbol]
    task.o(.text.WS2812_Boot) refers to ws2812.o(.text.WS2812_Set_Colour) for WS2812_Set_Colour
    task.o(.text.WS2812_Boot) refers to ws2812.o(.text.WS2812_Refresh) for WS2812_Refresh
    task.o(.text.WS2812_Boot) refers to flag_bit.o(.bss.Power_Time) for Power_Time
    task.o(.ARM.exidx.text.WS2812_Boot) refers to task.o(.text.WS2812_Boot) for [Anonymous Symbol]
    task.o(.text.WS2812_Cal_Bri) refers to task.o(.data.brightness) for brightness
    task.o(.ARM.exidx.text.WS2812_Cal_Bri) refers to task.o(.text.WS2812_Cal_Bri) for [Anonymous Symbol]
    task.o(.text.WS2812_Charge) refers to ws2812.o(.text.WS2812_Set_Colour) for WS2812_Set_Colour
    task.o(.text.WS2812_Charge) refers to ws2812.o(.text.WS2812_Refresh) for WS2812_Refresh
    task.o(.text.WS2812_Charge) refers to task.o(.bss.WS2812_Charge.cnt) for [Anonymous Symbol]
    task.o(.text.WS2812_Charge) refers to task.o(.data.brightness) for brightness
    task.o(.text.WS2812_Charge) refers to flag_bit.o(.bss.Power_Display_Flag) for Power_Display_Flag
    task.o(.ARM.exidx.text.WS2812_Charge) refers to task.o(.text.WS2812_Charge) for [Anonymous Symbol]
    task.o(.text.WS2812_Task) refers to ws2812.o(.text.WS2812_Set_Colour) for WS2812_Set_Colour
    task.o(.text.WS2812_Task) refers to ws2812.o(.text.WS2812_Refresh) for WS2812_Refresh
    task.o(.text.WS2812_Task) refers to task.o(.text.WS2812_Boot) for WS2812_Boot
    task.o(.text.WS2812_Task) refers to task.o(.text.WS2812_Charge) for WS2812_Charge
    task.o(.text.WS2812_Task) refers to task.o(.text.Power_Display) for Power_Display
    task.o(.text.WS2812_Task) refers to task.o(.text.Sensor_Activation_Diplay) for Sensor_Activation_Diplay
    task.o(.text.WS2812_Task) refers to ws2812.o(.bss.WS2812_Counter) for WS2812_Counter
    task.o(.text.WS2812_Task) refers to flag_bit.o(.bss.Power_Flag) for Power_Flag
    task.o(.text.WS2812_Task) refers to flag_bit.o(.bss.Charge_Flag) for Charge_Flag
    task.o(.text.WS2812_Task) refers to flag_bit.o(.bss.Gear_Position) for Gear_Position
    task.o(.text.WS2812_Task) refers to flag_bit.o(.bss.WS2812_Measure) for WS2812_Measure
    task.o(.text.WS2812_Task) refers to flag_bit.o(.bss.Lightbar_Mode_Flag) for Lightbar_Mode_Flag
    task.o(.text.WS2812_Task) refers to flag_bit.o(.bss.Footpad_Activation_Flag) for Footpad_Activation_Flag
    task.o(.text.WS2812_Task) refers to flag_bit.o(.bss.Power_Display_Flag) for Power_Display_Flag
    task.o(.ARM.exidx.text.WS2812_Task) refers to task.o(.text.WS2812_Task) for [Anonymous Symbol]
    task.o(.text.Power_Task) refers to flag_bit.o(.bss.Power_Flag) for Power_Flag
    task.o(.text.Power_Task) refers to task.o(.bss.Power_Task.power_flag_last) for [Anonymous Symbol]
    task.o(.text.Power_Task) refers to flag_bit.o(.bss.Flashlight_Flag) for Flashlight_Flag
    task.o(.text.Power_Task) refers to task.o(.bss.Power_Task.power_step) for [Anonymous Symbol]
    task.o(.text.Power_Task) refers to flag_bit.o(.bss.Power_Time) for Power_Time
    task.o(.text.Power_Task) refers to flag_bit.o(.bss.Gear_Position) for Gear_Position
    task.o(.text.Power_Task) refers to flag_bit.o(.bss.Buzzer_Flag) for Buzzer_Flag
    task.o(.ARM.exidx.text.Power_Task) refers to task.o(.text.Power_Task) for [Anonymous Symbol]
    task.o(.text.Charge_Task) refers to flag_bit.o(.bss.Charge_Flag) for Charge_Flag
    task.o(.text.Charge_Task) refers to task.o(.bss.Charge_Task.charge_step) for [Anonymous Symbol]
    task.o(.text.Charge_Task) refers to flag_bit.o(.bss.Charge_Time) for Charge_Time
    task.o(.text.Charge_Task) refers to flag_bit.o(.data.V_I) for V_I
    task.o(.ARM.exidx.text.Charge_Task) refers to task.o(.text.Charge_Task) for [Anonymous Symbol]
    task.o(.text.Flashlight_Bright) refers to hk32f030m_tim.o(.text.TIM_SetCompare2) for TIM_SetCompare2
    task.o(.text.Flashlight_Bright) refers to dflti.o(.text) for __aeabi_ui2d
    task.o(.text.Flashlight_Bright) refers to dmul.o(.text) for __aeabi_dmul
    task.o(.text.Flashlight_Bright) refers to daddsub.o(.text) for __aeabi_dadd
    task.o(.text.Flashlight_Bright) refers to dfixi.o(.text) for __aeabi_d2iz
    task.o(.text.Flashlight_Bright) refers to flag_bit.o(.bss.Flashlight_Flag) for Flashlight_Flag
    task.o(.text.Flashlight_Bright) refers to task.o(.bss.flashlight_flag_last_2) for flashlight_flag_last_2
    task.o(.text.Flashlight_Bright) refers to task.o(.bss.Flashlight_Bright.flashlight_bright_step) for [Anonymous Symbol]
    task.o(.text.Flashlight_Bright) refers to flag_bit.o(.bss.Brightness_Flag) for Brightness_Flag
    task.o(.text.Flashlight_Bright) refers to flag_bit.o(.bss.Flashlight_Time) for Flashlight_Time
    task.o(.text.Flashlight_Bright) refers to flag_bit.o(.bss.Gear_Position) for Gear_Position
    task.o(.text.Flashlight_Bright) refers to task.o(.rodata.str4.4) for [Anonymous Symbol]
    task.o(.text.Flashlight_Bright) refers to task.o(.bss.val) for val
    task.o(.ARM.exidx.text.Flashlight_Bright) refers to task.o(.text.Flashlight_Bright) for [Anonymous Symbol]
    task.o(.text.Flashlight_Task) refers to hk32f030m_tim.o(.text.TIM_SetCompare2) for TIM_SetCompare2
    task.o(.text.Flashlight_Task) refers to task.o(.text.Flashlight_Bright) for Flashlight_Bright
    task.o(.text.Flashlight_Task) refers to flag_bit.o(.bss.Power_Flag) for Power_Flag
    task.o(.text.Flashlight_Task) refers to flag_bit.o(.bss.Brightness_Flag) for Brightness_Flag
    task.o(.text.Flashlight_Task) refers to flag_bit.o(.bss.Flashlight_Flag) for Flashlight_Flag
    task.o(.text.Flashlight_Task) refers to task.o(.bss.Flashlight_Task.flashlight_flag_last) for [Anonymous Symbol]
    task.o(.text.Flashlight_Task) refers to task.o(.bss.val) for val
    task.o(.ARM.exidx.text.Flashlight_Task) refers to task.o(.text.Flashlight_Task) for [Anonymous Symbol]
    task.o(.text.Flashlight_Detection) refers to hk32f030m_tim.o(.text.TIM_SetCompare2) for TIM_SetCompare2
    task.o(.text.Flashlight_Detection) refers to fcmp.o(i._fls) for __aeabi_fcmplt
    task.o(.text.Flashlight_Detection) refers to flag_bit.o(.bss.Flashlight_Detection_Time) for Flashlight_Detection_Time
    task.o(.text.Flashlight_Detection) refers to flag_bit.o(.bss.Gear_Position) for Gear_Position
    task.o(.text.Flashlight_Detection) refers to task.o(.bss.Flashlight_Detection.gear_position_last) for [Anonymous Symbol]
    task.o(.text.Flashlight_Detection) refers to flag_bit.o(.bss.ADC2_Val) for ADC2_Val
    task.o(.text.Flashlight_Detection) refers to flag_bit.o(.bss.ADC1_Val) for ADC1_Val
    task.o(.text.Flashlight_Detection) refers to task.o(.rodata.str4.4) for [Anonymous Symbol]
    task.o(.ARM.exidx.text.Flashlight_Detection) refers to task.o(.text.Flashlight_Detection) for [Anonymous Symbol]
    task.o(.text.Buzzer_Task) refers to dflti.o(.text) for __aeabi_ui2d
    task.o(.text.Buzzer_Task) refers to dmul.o(.text) for __aeabi_dmul
    task.o(.text.Buzzer_Task) refers to daddsub.o(.text) for __aeabi_dadd
    task.o(.text.Buzzer_Task) refers to dfixi.o(.text) for __aeabi_d2iz
    task.o(.text.Buzzer_Task) refers to buzzer.o(.text.Buzzer_Ring) for Buzzer_Ring
    task.o(.text.Buzzer_Task) refers to flag_bit.o(.bss.Buzzer_Flag) for Buzzer_Flag
    task.o(.text.Buzzer_Task) refers to flag_bit.o(.bss.Power_Flag) for Power_Flag
    task.o(.text.Buzzer_Task) refers to flag_bit.o(.bss.Buzzer_Frequency) for Buzzer_Frequency
    task.o(.text.Buzzer_Task) refers to flag_bit.o(.bss.Gear_Position) for Gear_Position
    task.o(.text.Buzzer_Task) refers to task.o(.bss.Buzzer_Task.gear_position_last) for [Anonymous Symbol]
    task.o(.text.Buzzer_Task) refers to task.o(.bss.Buzzer_Task.buzzer_step) for [Anonymous Symbol]
    task.o(.text.Buzzer_Task) refers to task.o(.bss.Buzzer_Task.sound_frequency) for [Anonymous Symbol]
    task.o(.text.Buzzer_Task) refers to flag_bit.o(.bss.Buzzer_Time) for Buzzer_Time
    task.o(.text.Buzzer_Task) refers to task.o(.bss.Buzzer_Task.ring_frequency) for [Anonymous Symbol]
    task.o(.ARM.exidx.text.Buzzer_Task) refers to task.o(.text.Buzzer_Task) for [Anonymous Symbol]
    task.o(.text.Usart_Task) refers to vesc_uasrt.o(.text.Get_Vesc_Pack_Data) for Get_Vesc_Pack_Data
    task.o(.text.Usart_Task) refers to vesc_uasrt.o(.text.Protocol_Parse) for Protocol_Parse
    task.o(.text.Usart_Task) refers to flag_bit.o(.bss.Power_Flag) for Power_Flag
    task.o(.text.Usart_Task) refers to vesc_uasrt.o(.bss.data) for data
    task.o(.text.Usart_Task) refers to task.o(.bss.Usart_Task.usart_step) for [Anonymous Symbol]
    task.o(.text.Usart_Task) refers to vesc_uasrt.o(.bss.VESC_RX_Flag) for VESC_RX_Flag
    task.o(.text.Usart_Task) refers to flag_bit.o(.bss.Usart_Time) for Usart_Time
    task.o(.text.Usart_Task) refers to vesc_uasrt.o(.bss.VESC_RX_Buff) for VESC_RX_Buff
    task.o(.text.Usart_Task) refers to flag_bit.o(.bss.Usart_Flag) for Usart_Flag
    task.o(.ARM.exidx.text.Usart_Task) refers to task.o(.text.Usart_Task) for [Anonymous Symbol]
    task.o(.text.ADC_Task) refers to adc.o(.text.Read_ADC_Value) for Read_ADC_Value
    task.o(.text.ADC_Task) refers to dflti.o(.text) for __aeabi_ui2d
    task.o(.text.ADC_Task) refers to dmul.o(.text) for __aeabi_dmul
    task.o(.text.ADC_Task) refers to d2f.o(.text) for __aeabi_d2f
    task.o(.text.ADC_Task) refers to daddsub.o(.text) for __aeabi_dadd
    task.o(.text.ADC_Task) refers to task.o(.bss.ADC_Task.adc_step) for [Anonymous Symbol]
    task.o(.text.ADC_Task) refers to flag_bit.o(.bss.ADC_Time) for ADC_Time
    task.o(.text.ADC_Task) refers to task.o(.bss.ADC_Task.adc_charge_sum_ave) for [Anonymous Symbol]
    task.o(.text.ADC_Task) refers to task.o(.bss.ADC_Task.adc1_val_sum_ave) for [Anonymous Symbol]
    task.o(.text.ADC_Task) refers to flag_bit.o(.bss.ADC2_Val) for ADC2_Val
    task.o(.text.ADC_Task) refers to flag_bit.o(.bss.ADC1_Val) for ADC1_Val
    task.o(.text.ADC_Task) refers to flag_bit.o(.bss.Charge_Time) for Charge_Time
    task.o(.text.ADC_Task) refers to flag_bit.o(.data.V_I) for V_I
    task.o(.text.ADC_Task) refers to flag_bit.o(.bss.Charge_Voltage) for Charge_Voltage
    task.o(.text.ADC_Task) refers to flag_bit.o(.bss.Charge_Current) for Charge_Current
    task.o(.ARM.exidx.text.ADC_Task) refers to task.o(.text.ADC_Task) for [Anonymous Symbol]
    task.o(.text.Apply_BatteryPowerFlag) refers to fcmp.o(i._fgeq) for __aeabi_fcmpge
    task.o(.text.Apply_BatteryPowerFlag) refers to task.o(.rodata..L__const.Apply_BatteryPowerFlag.battVoltages) for [Anonymous Symbol]
    task.o(.text.Apply_BatteryPowerFlag) refers to flag_bit.o(.bss.Power_Display_Flag) for Power_Display_Flag
    task.o(.ARM.exidx.text.Apply_BatteryPowerFlag) refers to task.o(.text.Apply_BatteryPowerFlag) for [Anonymous Symbol]
    task.o(.text.Conditional_Judgment) refers to fcmp.o(i._fleq) for __aeabi_fcmple
    task.o(.text.Conditional_Judgment) refers to f2d.o(.text) for __aeabi_f2d
    task.o(.text.Conditional_Judgment) refers to dcmp.o(i._dgeq) for __aeabi_dcmpge
    task.o(.text.Conditional_Judgment) refers to fcmp.o(i._fgeq) for __aeabi_fcmpge
    task.o(.text.Conditional_Judgment) refers to dcmp.o(i._dls) for __aeabi_dcmplt
    task.o(.text.Conditional_Judgment) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    task.o(.text.Conditional_Judgment) refers to ffixi.o(.text) for __aeabi_f2iz
    task.o(.text.Conditional_Judgment) refers to dcmp.o(i._dgr) for __aeabi_dcmpgt
    task.o(.text.Conditional_Judgment) refers to dcmp.o(i._dleq) for __aeabi_dcmple
    task.o(.text.Conditional_Judgment) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    task.o(.text.Conditional_Judgment) refers to fdiv.o(.text) for __aeabi_fdiv
    task.o(.text.Conditional_Judgment) refers to daddsub.o(.text) for __aeabi_dadd
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.bss.Power_Flag) for Power_Flag
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.bss.Charge_Time) for Charge_Time
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.data.V_I) for V_I
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.bss.Charge_Voltage) for Charge_Voltage
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.bss.Charge_Flag) for Charge_Flag
    task.o(.text.Conditional_Judgment) refers to task.o(.bss.Conditional_Judgment.battery_voltage_last) for [Anonymous Symbol]
    task.o(.text.Conditional_Judgment) refers to task.o(.rodata..L__const.Apply_BatteryPowerFlag.battVoltages) for [Anonymous Symbol]
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.bss.Power_Display_Flag) for Power_Display_Flag
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.bss.Charge_Current) for Charge_Current
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.bss.Shutdown_Cnt) for Shutdown_Cnt
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.bss.Usart_Flag) for Usart_Flag
    task.o(.text.Conditional_Judgment) refers to vesc_uasrt.o(.bss.data) for data
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.bss.Buzzer_Frequency) for Buzzer_Frequency
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.bss.ADC1_Val) for ADC1_Val
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.bss.ADC2_Val) for ADC2_Val
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.bss.Flashlight_Flag) for Flashlight_Flag
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.bss.Footpad_Activation_Flag) for Footpad_Activation_Flag
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.bss.Lightbar_Mode_Flag) for Lightbar_Mode_Flag
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.bss.Charger_Detection_1ms) for Charger_Detection_1ms
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.bss.Shutdown_Time_M) for Shutdown_Time_M
    task.o(.text.Conditional_Judgment) refers to flag_bit.o(.bss.Shutdown_Time_S) for Shutdown_Time_S
    task.o(.ARM.exidx.text.Conditional_Judgment) refers to task.o(.text.Conditional_Judgment) for [Anonymous Symbol]
    led.o(.text.LED_Init) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    led.o(.text.LED_Init) refers to hk32f030m_gpio.o(.text.GPIO_Init) for GPIO_Init
    led.o(.ARM.exidx.text.LED_Init) refers to led.o(.text.LED_Init) for [Anonymous Symbol]
    time.o(.text.Time6_Init) refers to hk32f030m_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    time.o(.text.Time6_Init) refers to hk32f030m_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    time.o(.text.Time6_Init) refers to hk32f030m_tim.o(.text.TIM_ITConfig) for TIM_ITConfig
    time.o(.text.Time6_Init) refers to hk32f030m_tim.o(.text.TIM_Cmd) for TIM_Cmd
    time.o(.text.Time6_Init) refers to hk32f030m_misc.o(.text.NVIC_Init) for NVIC_Init
    time.o(.ARM.exidx.text.Time6_Init) refers to time.o(.text.Time6_Init) for [Anonymous Symbol]
    spi.o(.text.SPI_Config) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    spi.o(.text.SPI_Config) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    spi.o(.text.SPI_Config) refers to hk32f030m_gpio.o(.text.GPIO_Init) for GPIO_Init
    spi.o(.text.SPI_Config) refers to hk32f030m_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    spi.o(.text.SPI_Config) refers to hk32f030m_spi.o(.text.SPI_Init) for SPI_Init
    spi.o(.text.SPI_Config) refers to hk32f030m_spi.o(.text.SPI_Cmd) for SPI_Cmd
    spi.o(.ARM.exidx.text.SPI_Config) refers to spi.o(.text.SPI_Config) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPI1_Send_Byte) refers to spi.o(.text.SPI1_Send_Byte) for [Anonymous Symbol]
    power.o(.text.Power_Init) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    power.o(.text.Power_Init) refers to hk32f030m_gpio.o(.text.GPIO_Init) for GPIO_Init
    power.o(.ARM.exidx.text.Power_Init) refers to power.o(.text.Power_Init) for [Anonymous Symbol]
    led_pwm.o(.text.LED_PWM_Init) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    led_pwm.o(.text.LED_PWM_Init) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    led_pwm.o(.text.LED_PWM_Init) refers to hk32f030m_gpio.o(.text.GPIO_Init) for GPIO_Init
    led_pwm.o(.text.LED_PWM_Init) refers to hk32f030m_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    led_pwm.o(.text.LED_PWM_Init) refers to hk32f030m_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    led_pwm.o(.text.LED_PWM_Init) refers to hk32f030m_tim.o(.text.TIM_OC2Init) for TIM_OC2Init
    led_pwm.o(.text.LED_PWM_Init) refers to hk32f030m_tim.o(.text.TIM_Cmd) for TIM_Cmd
    led_pwm.o(.text.LED_PWM_Init) refers to hk32f030m_tim.o(.text.TIM_CtrlPWMOutputs) for TIM_CtrlPWMOutputs
    led_pwm.o(.ARM.exidx.text.LED_PWM_Init) refers to led_pwm.o(.text.LED_PWM_Init) for [Anonymous Symbol]
    key.o(.text.KEY_Init) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    key.o(.text.KEY_Init) refers to hk32f030m_gpio.o(.text.GPIO_Init) for GPIO_Init
    key.o(.ARM.exidx.text.KEY_Init) refers to key.o(.text.KEY_Init) for [Anonymous Symbol]
    key.o(.text.KEY1_Scan) refers to key.o(.bss.KEY1_Scan.key1_st) for [Anonymous Symbol]
    key.o(.text.KEY1_Scan) refers to key.o(.bss.KEY1_Scan.key1_num) for [Anonymous Symbol]
    key.o(.text.KEY1_Scan) refers to key.o(.bss.KEY1_State) for KEY1_State
    key.o(.text.KEY1_Scan) refers to key.o(.bss.KEY1_Scan.key1_cnt_2) for [Anonymous Symbol]
    key.o(.text.KEY1_Scan) refers to key.o(.bss.KEY1_Scan.key1_cnt) for [Anonymous Symbol]
    key.o(.ARM.exidx.text.KEY1_Scan) refers to key.o(.text.KEY1_Scan) for [Anonymous Symbol]
    buzzer.o(.text.Buzzer_Init) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    buzzer.o(.text.Buzzer_Init) refers to hk32f030m_gpio.o(.text.GPIO_Init) for GPIO_Init
    buzzer.o(.ARM.exidx.text.Buzzer_Init) refers to buzzer.o(.text.Buzzer_Init) for [Anonymous Symbol]
    buzzer.o(.text.Buzzer_Scan) refers to buzzer.o(.bss.Buzzer_Counter) for Buzzer_Counter
    buzzer.o(.text.Buzzer_Scan) refers to buzzer.o(.bss.Buzzer_Scan.buzzer_lock) for [Anonymous Symbol]
    buzzer.o(.ARM.exidx.text.Buzzer_Scan) refers to buzzer.o(.text.Buzzer_Scan) for [Anonymous Symbol]
    buzzer.o(.text.Buzzer_Ring) refers to buzzer.o(.bss.Buzzer_Counter) for Buzzer_Counter
    buzzer.o(.ARM.exidx.text.Buzzer_Ring) refers to buzzer.o(.text.Buzzer_Ring) for [Anonymous Symbol]
    usart.o(.text.USART1_Init) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    usart.o(.text.USART1_Init) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    usart.o(.text.USART1_Init) refers to hk32f030m_gpio.o(.text.GPIO_Init) for GPIO_Init
    usart.o(.text.USART1_Init) refers to hk32f030m_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    usart.o(.text.USART1_Init) refers to hk32f030m_usart.o(.text.USART_Init) for USART_Init
    usart.o(.text.USART1_Init) refers to hk32f030m_usart.o(.text.USART_Cmd) for USART_Cmd
    usart.o(.text.USART1_Init) refers to hk32f030m_usart.o(.text.USART_ITConfig) for USART_ITConfig
    usart.o(.text.USART1_Init) refers to hk32f030m_misc.o(.text.NVIC_Init) for NVIC_Init
    usart.o(.ARM.exidx.text.USART1_Init) refers to usart.o(.text.USART1_Init) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.USART1_Send_Byte) refers to usart.o(.text.USART1_Send_Byte) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.USART1_Send_Bytes) refers to usart.o(.text.USART1_Send_Bytes) for [Anonymous Symbol]
    adc.o(.text.ADC1_Init) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    adc.o(.text.ADC1_Init) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    adc.o(.text.ADC1_Init) refers to hk32f030m_gpio.o(.text.GPIO_Init) for GPIO_Init
    adc.o(.text.ADC1_Init) refers to hk32f030m_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    adc.o(.text.ADC1_Init) refers to hk32f030m_adc.o(.text.ADC_DeInit) for ADC_DeInit
    adc.o(.text.ADC1_Init) refers to hk32f030m_adc.o(.text.ADC_StructInit) for ADC_StructInit
    adc.o(.text.ADC1_Init) refers to hk32f030m_adc.o(.text.ADC_Init) for ADC_Init
    adc.o(.text.ADC1_Init) refers to hk32f030m_adc.o(.text.ADC_Cmd) for ADC_Cmd
    adc.o(.ARM.exidx.text.ADC1_Init) refers to adc.o(.text.ADC1_Init) for [Anonymous Symbol]
    adc.o(.text.Read_ADC_Value) refers to hk32f030m_adc.o(.text.ADC_StopOfConversion) for ADC_StopOfConversion
    adc.o(.text.Read_ADC_Value) refers to hk32f030m_adc.o(.text.ADC_ClearFlag) for ADC_ClearFlag
    adc.o(.text.Read_ADC_Value) refers to hk32f030m_adc.o(.text.ADC_ChannelConfig) for ADC_ChannelConfig
    adc.o(.text.Read_ADC_Value) refers to hk32f030m_adc.o(.text.ADC_GetFlagStatus) for ADC_GetFlagStatus
    adc.o(.text.Read_ADC_Value) refers to hk32f030m_adc.o(.text.ADC_StartOfConversion) for ADC_StartOfConversion
    adc.o(.text.Read_ADC_Value) refers to hk32f030m_adc.o(.text.ADC_GetConversionValue) for ADC_GetConversionValue
    adc.o(.ARM.exidx.text.Read_ADC_Value) refers to adc.o(.text.Read_ADC_Value) for [Anonymous Symbol]
    io_ws2812.o(.text.IO_WS2812_Init) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    io_ws2812.o(.text.IO_WS2812_Init) refers to hk32f030m_gpio.o(.text.GPIO_Init) for GPIO_Init
    io_ws2812.o(.ARM.exidx.text.IO_WS2812_Init) refers to io_ws2812.o(.text.IO_WS2812_Init) for [Anonymous Symbol]
    io_ws2812.o(.ARM.exidx.text.WS2812_0_Code) refers to io_ws2812.o(.text.WS2812_0_Code) for [Anonymous Symbol]
    io_ws2812.o(.ARM.exidx.text.WS2812_1_Code) refers to io_ws2812.o(.text.WS2812_1_Code) for [Anonymous Symbol]
    hk32f030m_adc.o(.text.ADC_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    hk32f030m_adc.o(.ARM.exidx.text.ADC_DeInit) refers to hk32f030m_adc.o(.text.ADC_DeInit) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_Init) refers to hk32f030m_adc.o(.text.ADC_Init) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_StructInit) refers to hk32f030m_adc.o(.text.ADC_StructInit) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_Cmd) refers to hk32f030m_adc.o(.text.ADC_Cmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ClockModeConfig) refers to hk32f030m_adc.o(.text.ADC_ClockModeConfig) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_JitterCmd) refers to hk32f030m_adc.o(.text.ADC_JitterCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AutoPowerOffCmd) refers to hk32f030m_adc.o(.text.ADC_AutoPowerOffCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_WaitModeCmd) refers to hk32f030m_adc.o(.text.ADC_WaitModeCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd) refers to hk32f030m_adc.o(.text.ADC_AnalogWatchdogCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig) refers to hk32f030m_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig) refers to hk32f030m_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelCmd) refers to hk32f030m_adc.o(.text.ADC_AnalogWatchdogSingleChannelCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_VrefintCmd) refers to hk32f030m_adc.o(.text.ADC_VrefintCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ChannelConfig) refers to hk32f030m_adc.o(.text.ADC_ChannelConfig) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ContinuousModeCmd) refers to hk32f030m_adc.o(.text.ADC_ContinuousModeCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_DiscModeCmd) refers to hk32f030m_adc.o(.text.ADC_DiscModeCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_OverrunModeCmd) refers to hk32f030m_adc.o(.text.ADC_OverrunModeCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_GetCalibrationFactor) refers to hk32f030m_adc.o(.text.ADC_GetCalibrationFactor) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_StopOfConversion) refers to hk32f030m_adc.o(.text.ADC_StopOfConversion) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_StartOfConversion) refers to hk32f030m_adc.o(.text.ADC_StartOfConversion) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_GetConversionValue) refers to hk32f030m_adc.o(.text.ADC_GetConversionValue) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ITConfig) refers to hk32f030m_adc.o(.text.ADC_ITConfig) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_GetFlagStatus) refers to hk32f030m_adc.o(.text.ADC_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ClearFlag) refers to hk32f030m_adc.o(.text.ADC_ClearFlag) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_GetITStatus) refers to hk32f030m_adc.o(.text.ADC_GetITStatus) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit) refers to hk32f030m_adc.o(.text.ADC_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AWDWakeup_Cmd) refers to hk32f030m_adc.o(.text.ADC_AWDWakeup_Cmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_Diff_Func) refers to hk32f030m_adc.o(.text.ADC_Diff_Func) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_InterDelay_Func) refers to hk32f030m_adc.o(.text.ADC_InterDelay_Func) for [Anonymous Symbol]
    hk32f030m_gpio.o(.text.GPIO_DeInit) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphResetCmd) for RCC_AHBPeriphResetCmd
    hk32f030m_gpio.o(.text.GPIO_DeInit) refers to hk32f030m_gpio.o(.rodata.cst16) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_DeInit) refers to hk32f030m_gpio.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Init) refers to hk32f030m_gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_StructInit) refers to hk32f030m_gpio.o(.text.GPIO_StructInit) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig) refers to hk32f030m_gpio.o(.text.GPIO_PinLockConfig) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit) refers to hk32f030m_gpio.o(.text.GPIO_ReadInputDataBit) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadInputData) refers to hk32f030m_gpio.o(.text.GPIO_ReadInputData) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit) refers to hk32f030m_gpio.o(.text.GPIO_ReadOutputDataBit) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData) refers to hk32f030m_gpio.o(.text.GPIO_ReadOutputData) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_SetBits) refers to hk32f030m_gpio.o(.text.GPIO_SetBits) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ResetBits) refers to hk32f030m_gpio.o(.text.GPIO_ResetBits) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_WriteBit) refers to hk32f030m_gpio.o(.text.GPIO_WriteBit) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Write) refers to hk32f030m_gpio.o(.text.GPIO_Write) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Toggle) refers to hk32f030m_gpio.o(.text.GPIO_Toggle) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig) refers to hk32f030m_gpio.o(.text.GPIO_PinAFConfig) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_PinAFConfig) refers to hk32f030m_gpio.o(.text.GPIO_IOMUX_PinAFConfig) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_ChangePin) refers to hk32f030m_gpio.o(.text.GPIO_IOMUX_ChangePin) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_SetTIM2CN1_Source) refers to hk32f030m_gpio.o(.text.GPIO_IOMUX_SetTIM2CN1_Source) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd) refers to hk32f030m_iwdg.o(.text.IWDG_WriteAccessCmd) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler) refers to hk32f030m_iwdg.o(.text.IWDG_SetPrescaler) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetReload) refers to hk32f030m_iwdg.o(.text.IWDG_SetReload) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter) refers to hk32f030m_iwdg.o(.text.IWDG_ReloadCounter) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetWindowValue) refers to hk32f030m_iwdg.o(.text.IWDG_SetWindowValue) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_Enable) refers to hk32f030m_iwdg.o(.text.IWDG_Enable) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus) refers to hk32f030m_iwdg.o(.text.IWDG_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_misc.o(.ARM.exidx.text.NVIC_Init) refers to hk32f030m_misc.o(.text.NVIC_Init) for [Anonymous Symbol]
    hk32f030m_misc.o(.ARM.exidx.text.NVIC_SystemLPConfig) refers to hk32f030m_misc.o(.text.NVIC_SystemLPConfig) for [Anonymous Symbol]
    hk32f030m_misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig) refers to hk32f030m_misc.o(.text.SysTick_CLKSourceConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_DeInit) refers to hk32f030m_rcc.o(.text.RCC_DeInit) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_WaitForStartUp) refers to hk32f030m_rcc.o(.text.RCC_WaitForStartUp) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus) refers to hk32f030m_rcc.o(.text.RCC_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue) refers to hk32f030m_rcc.o(.text.RCC_AdjustHSICalibrationValue) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_HSICmd) refers to hk32f030m_rcc.o(.text.RCC_HSICmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_LSICmd) refers to hk32f030m_rcc.o(.text.RCC_LSICmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.text.RCC_EXTCmd) refers to hk32f030m_gpio.o(.text.GPIO_Init) for GPIO_Init
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_EXTCmd) refers to hk32f030m_rcc.o(.text.RCC_EXTCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd) refers to hk32f030m_rcc.o(.text.RCC_ClockSecuritySystemCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_MCOConfig) refers to hk32f030m_rcc.o(.text.RCC_MCOConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_SYSCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource) refers to hk32f030m_rcc.o(.text.RCC_GetSYSCLKSource) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_HCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_HCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_PCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_PCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_ADCCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_I2CCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_I2CCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_USARTCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_USARTCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.text.RCC_GetClocksFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    hk32f030m_rcc.o(.text.RCC_GetClocksFreq) refers to hk32f030m_rcc.o(.rodata.AHBPrescTable) for AHBPrescTable
    hk32f030m_rcc.o(.text.RCC_GetClocksFreq) refers to hk32f030m_rcc.o(.rodata.APBPrescTable) for APBPrescTable
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq) refers to hk32f030m_rcc.o(.text.RCC_GetClocksFreq) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphClockCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd) refers to hk32f030m_rcc.o(.text.RCC_APB1PeriphClockCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphResetCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd) refers to hk32f030m_rcc.o(.text.RCC_APB1PeriphResetCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_ITConfig) refers to hk32f030m_rcc.o(.text.RCC_ITConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClearFlag) refers to hk32f030m_rcc.o(.text.RCC_ClearFlag) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetITStatus) refers to hk32f030m_rcc.o(.text.RCC_GetITStatus) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit) refers to hk32f030m_rcc.o(.text.RCC_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030m_spi.o(.text.SPI_I2S_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_DeInit) refers to hk32f030m_spi.o(.text.SPI_I2S_DeInit) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_StructInit) refers to hk32f030m_spi.o(.text.SPI_StructInit) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_Init) refers to hk32f030m_spi.o(.text.SPI_Init) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.I2S_StructInit) refers to hk32f030m_spi.o(.text.I2S_StructInit) for [Anonymous Symbol]
    hk32f030m_spi.o(.text.I2S_Init) refers to hk32f030m_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    hk32f030m_spi.o(.text.I2S_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    hk32f030m_spi.o(.ARM.exidx.text.I2S_Init) refers to hk32f030m_spi.o(.text.I2S_Init) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_Cmd) refers to hk32f030m_spi.o(.text.SPI_Cmd) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_TIModeCmd) refers to hk32f030m_spi.o(.text.SPI_TIModeCmd) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.I2S_Cmd) refers to hk32f030m_spi.o(.text.I2S_Cmd) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_DataSizeConfig) refers to hk32f030m_spi.o(.text.SPI_DataSizeConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_RxFIFOThresholdConfig) refers to hk32f030m_spi.o(.text.SPI_RxFIFOThresholdConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_BiDirectionalLineConfig) refers to hk32f030m_spi.o(.text.SPI_BiDirectionalLineConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_NSSInternalSoftwareConfig) refers to hk32f030m_spi.o(.text.SPI_NSSInternalSoftwareConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_SSOutputCmd) refers to hk32f030m_spi.o(.text.SPI_SSOutputCmd) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_NSSPulseModeCmd) refers to hk32f030m_spi.o(.text.SPI_NSSPulseModeCmd) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_SendData8) refers to hk32f030m_spi.o(.text.SPI_SendData8) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_SendData16) refers to hk32f030m_spi.o(.text.SPI_I2S_SendData16) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_ReceiveData8) refers to hk32f030m_spi.o(.text.SPI_ReceiveData8) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ReceiveData16) refers to hk32f030m_spi.o(.text.SPI_I2S_ReceiveData16) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_CRCLengthConfig) refers to hk32f030m_spi.o(.text.SPI_CRCLengthConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_CalculateCRC) refers to hk32f030m_spi.o(.text.SPI_CalculateCRC) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_TransmitCRC) refers to hk32f030m_spi.o(.text.SPI_TransmitCRC) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_GetCRC) refers to hk32f030m_spi.o(.text.SPI_GetCRC) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_GetCRCPolynomial) refers to hk32f030m_spi.o(.text.SPI_GetCRCPolynomial) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ITConfig) refers to hk32f030m_spi.o(.text.SPI_I2S_ITConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_GetTransmissionFIFOStatus) refers to hk32f030m_spi.o(.text.SPI_GetTransmissionFIFOStatus) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_GetReceptionFIFOStatus) refers to hk32f030m_spi.o(.text.SPI_GetReceptionFIFOStatus) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_GetFlagStatus) refers to hk32f030m_spi.o(.text.SPI_I2S_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ClearFlag) refers to hk32f030m_spi.o(.text.SPI_I2S_ClearFlag) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_GetITStatus) refers to hk32f030m_spi.o(.text.SPI_I2S_GetITStatus) for [Anonymous Symbol]
    hk32f030m_syscfg.o(.text.SYSCFG_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_DeInit) refers to hk32f030m_syscfg.o(.text.SYSCFG_DeInit) for [Anonymous Symbol]
    hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_Lockup_Tim1BreakConfig) refers to hk32f030m_syscfg.o(.text.SYSCFG_Lockup_Tim1BreakConfig) for [Anonymous Symbol]
    hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_MemoryRemapConfig) refers to hk32f030m_syscfg.o(.text.SYSCFG_MemoryRemapConfig) for [Anonymous Symbol]
    hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_EXTILineConfig) refers to hk32f030m_syscfg.o(.text.SYSCFG_EXTILineConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.text.TIM_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    hk32f030m_tim.o(.text.TIM_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    hk32f030m_tim.o(.ARM.exidx.text.TIM_DeInit) refers to hk32f030m_tim.o(.text.TIM_DeInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_TimeBaseInit) refers to hk32f030m_tim.o(.text.TIM_TimeBaseInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit) refers to hk32f030m_tim.o(.text.TIM_TimeBaseStructInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_PrescalerConfig) refers to hk32f030m_tim.o(.text.TIM_PrescalerConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_CounterModeConfig) refers to hk32f030m_tim.o(.text.TIM_CounterModeConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCounter) refers to hk32f030m_tim.o(.text.TIM_SetCounter) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetAutoreload) refers to hk32f030m_tim.o(.text.TIM_SetAutoreload) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCounter) refers to hk32f030m_tim.o(.text.TIM_GetCounter) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetPrescaler) refers to hk32f030m_tim.o(.text.TIM_GetPrescaler) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig) refers to hk32f030m_tim.o(.text.TIM_UpdateDisableConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig) refers to hk32f030m_tim.o(.text.TIM_UpdateRequestConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig) refers to hk32f030m_tim.o(.text.TIM_ARRPreloadConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode) refers to hk32f030m_tim.o(.text.TIM_SelectOnePulseMode) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetClockDivision) refers to hk32f030m_tim.o(.text.TIM_SetClockDivision) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_Cmd) refers to hk32f030m_tim.o(.text.TIM_Cmd) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_BDTRConfig) refers to hk32f030m_tim.o(.text.TIM_BDTRConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_BDTRStructInit) refers to hk32f030m_tim.o(.text.TIM_BDTRStructInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs) refers to hk32f030m_tim.o(.text.TIM_CtrlPWMOutputs) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1Init) refers to hk32f030m_tim.o(.text.TIM_OC1Init) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2Init) refers to hk32f030m_tim.o(.text.TIM_OC2Init) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3Init) refers to hk32f030m_tim.o(.text.TIM_OC3Init) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4Init) refers to hk32f030m_tim.o(.text.TIM_OC4Init) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OCStructInit) refers to hk32f030m_tim.o(.text.TIM_OCStructInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOCxM) refers to hk32f030m_tim.o(.text.TIM_SelectOCxM) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare1) refers to hk32f030m_tim.o(.text.TIM_SetCompare1) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare2) refers to hk32f030m_tim.o(.text.TIM_SetCompare2) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare3) refers to hk32f030m_tim.o(.text.TIM_SetCompare3) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare4) refers to hk32f030m_tim.o(.text.TIM_SetCompare4) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config) refers to hk32f030m_tim.o(.text.TIM_ForcedOC1Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config) refers to hk32f030m_tim.o(.text.TIM_ForcedOC2Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config) refers to hk32f030m_tim.o(.text.TIM_ForcedOC3Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config) refers to hk32f030m_tim.o(.text.TIM_ForcedOC4Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_CCPreloadControl) refers to hk32f030m_tim.o(.text.TIM_CCPreloadControl) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig) refers to hk32f030m_tim.o(.text.TIM_OC1PreloadConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig) refers to hk32f030m_tim.o(.text.TIM_OC2PreloadConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig) refers to hk32f030m_tim.o(.text.TIM_OC3PreloadConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig) refers to hk32f030m_tim.o(.text.TIM_OC4PreloadConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1FastConfig) refers to hk32f030m_tim.o(.text.TIM_OC1FastConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2FastConfig) refers to hk32f030m_tim.o(.text.TIM_OC2FastConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3FastConfig) refers to hk32f030m_tim.o(.text.TIM_OC3FastConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4FastConfig) refers to hk32f030m_tim.o(.text.TIM_OC4FastConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref) refers to hk32f030m_tim.o(.text.TIM_ClearOC1Ref) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref) refers to hk32f030m_tim.o(.text.TIM_ClearOC2Ref) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref) refers to hk32f030m_tim.o(.text.TIM_ClearOC3Ref) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref) refers to hk32f030m_tim.o(.text.TIM_ClearOC4Ref) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC1PolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC1NPolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC2PolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC2NPolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC3PolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC3NPolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC4PolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOCREFClear) refers to hk32f030m_tim.o(.text.TIM_SelectOCREFClear) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_CCxCmd) refers to hk32f030m_tim.o(.text.TIM_CCxCmd) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_CCxNCmd) refers to hk32f030m_tim.o(.text.TIM_CCxNCmd) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectCOM) refers to hk32f030m_tim.o(.text.TIM_SelectCOM) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ICInit) refers to hk32f030m_tim.o(.text.TIM_ICInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler) refers to hk32f030m_tim.o(.text.TIM_SetIC1Prescaler) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler) refers to hk32f030m_tim.o(.text.TIM_SetIC2Prescaler) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler) refers to hk32f030m_tim.o(.text.TIM_SetIC3Prescaler) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler) refers to hk32f030m_tim.o(.text.TIM_SetIC4Prescaler) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ICStructInit) refers to hk32f030m_tim.o(.text.TIM_ICStructInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_PWMIConfig) refers to hk32f030m_tim.o(.text.TIM_PWMIConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture1) refers to hk32f030m_tim.o(.text.TIM_GetCapture1) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture2) refers to hk32f030m_tim.o(.text.TIM_GetCapture2) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture3) refers to hk32f030m_tim.o(.text.TIM_GetCapture3) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture4) refers to hk32f030m_tim.o(.text.TIM_GetCapture4) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ITConfig) refers to hk32f030m_tim.o(.text.TIM_ITConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GenerateEvent) refers to hk32f030m_tim.o(.text.TIM_GenerateEvent) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetFlagStatus) refers to hk32f030m_tim.o(.text.TIM_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearFlag) refers to hk32f030m_tim.o(.text.TIM_ClearFlag) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetITStatus) refers to hk32f030m_tim.o(.text.TIM_GetITStatus) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit) refers to hk32f030m_tim.o(.text.TIM_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_InternalClockConfig) refers to hk32f030m_tim.o(.text.TIM_InternalClockConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig) refers to hk32f030m_tim.o(.text.TIM_ITRxExternalClockConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger) refers to hk32f030m_tim.o(.text.TIM_SelectInputTrigger) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig) refers to hk32f030m_tim.o(.text.TIM_TIxExternalClockConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config) refers to hk32f030m_tim.o(.text.TIM_ETRClockMode1Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRConfig) refers to hk32f030m_tim.o(.text.TIM_ETRConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config) refers to hk32f030m_tim.o(.text.TIM_ETRClockMode2Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger) refers to hk32f030m_tim.o(.text.TIM_SelectOutputTrigger) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode) refers to hk32f030m_tim.o(.text.TIM_SelectSlaveMode) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode) refers to hk32f030m_tim.o(.text.TIM_SelectMasterSlaveMode) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig) refers to hk32f030m_tim.o(.text.TIM_EncoderInterfaceConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectHallSensor) refers to hk32f030m_tim.o(.text.TIM_SelectHallSensor) for [Anonymous Symbol]
    hk32f030m_usart.o(.text.USART_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    hk32f030m_usart.o(.ARM.exidx.text.USART_DeInit) refers to hk32f030m_usart.o(.text.USART_DeInit) for [Anonymous Symbol]
    hk32f030m_usart.o(.text.USART_Init) refers to hk32f030m_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    hk32f030m_usart.o(.text.USART_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    hk32f030m_usart.o(.ARM.exidx.text.USART_Init) refers to hk32f030m_usart.o(.text.USART_Init) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_StructInit) refers to hk32f030m_usart.o(.text.USART_StructInit) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ClockInit) refers to hk32f030m_usart.o(.text.USART_ClockInit) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ClockStructInit) refers to hk32f030m_usart.o(.text.USART_ClockStructInit) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_Cmd) refers to hk32f030m_usart.o(.text.USART_Cmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_DirectionModeCmd) refers to hk32f030m_usart.o(.text.USART_DirectionModeCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd) refers to hk32f030m_usart.o(.text.USART_OverSampling8Cmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd) refers to hk32f030m_usart.o(.text.USART_OneBitMethodCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_MSBFirstCmd) refers to hk32f030m_usart.o(.text.USART_MSBFirstCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_DataInvCmd) refers to hk32f030m_usart.o(.text.USART_DataInvCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_InvPinCmd) refers to hk32f030m_usart.o(.text.USART_InvPinCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SWAPPinCmd) refers to hk32f030m_usart.o(.text.USART_SWAPPinCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ReceiverTimeOutCmd) refers to hk32f030m_usart.o(.text.USART_ReceiverTimeOutCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetReceiverTimeOut) refers to hk32f030m_usart.o(.text.USART_SetReceiverTimeOut) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetPrescaler) refers to hk32f030m_usart.o(.text.USART_SetPrescaler) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_STOPModeCmd) refers to hk32f030m_usart.o(.text.USART_STOPModeCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_StopModeWakeUpSourceConfig) refers to hk32f030m_usart.o(.text.USART_StopModeWakeUpSourceConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_AutoBaudRateCmd) refers to hk32f030m_usart.o(.text.USART_AutoBaudRateCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_AutoBaudRateConfig) refers to hk32f030m_usart.o(.text.USART_AutoBaudRateConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SendData) refers to hk32f030m_usart.o(.text.USART_SendData) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ReceiveData) refers to hk32f030m_usart.o(.text.USART_ReceiveData) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetAddress) refers to hk32f030m_usart.o(.text.USART_SetAddress) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_MuteModeCmd) refers to hk32f030m_usart.o(.text.USART_MuteModeCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_MuteModeWakeUpConfig) refers to hk32f030m_usart.o(.text.USART_MuteModeWakeUpConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_AddressDetectionConfig) refers to hk32f030m_usart.o(.text.USART_AddressDetectionConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_LINBreakDetectLengthConfig) refers to hk32f030m_usart.o(.text.USART_LINBreakDetectLengthConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_LINCmd) refers to hk32f030m_usart.o(.text.USART_LINCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd) refers to hk32f030m_usart.o(.text.USART_HalfDuplexCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetGuardTime) refers to hk32f030m_usart.o(.text.USART_SetGuardTime) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SmartCardCmd) refers to hk32f030m_usart.o(.text.USART_SmartCardCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SmartCardNACKCmd) refers to hk32f030m_usart.o(.text.USART_SmartCardNACKCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetAutoRetryCount) refers to hk32f030m_usart.o(.text.USART_SetAutoRetryCount) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetBlockLength) refers to hk32f030m_usart.o(.text.USART_SetBlockLength) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_IrDAConfig) refers to hk32f030m_usart.o(.text.USART_IrDAConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_IrDACmd) refers to hk32f030m_usart.o(.text.USART_IrDACmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_DECmd) refers to hk32f030m_usart.o(.text.USART_DECmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_DEPolarityConfig) refers to hk32f030m_usart.o(.text.USART_DEPolarityConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetDEAssertionTime) refers to hk32f030m_usart.o(.text.USART_SetDEAssertionTime) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetDEDeassertionTime) refers to hk32f030m_usart.o(.text.USART_SetDEDeassertionTime) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ITConfig) refers to hk32f030m_usart.o(.text.USART_ITConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_RequestCmd) refers to hk32f030m_usart.o(.text.USART_RequestCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_OverrunDetectionConfig) refers to hk32f030m_usart.o(.text.USART_OverrunDetectionConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_GetFlagStatus) refers to hk32f030m_usart.o(.text.USART_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ClearFlag) refers to hk32f030m_usart.o(.text.USART_ClearFlag) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_GetITStatus) refers to hk32f030m_usart.o(.text.USART_GetITStatus) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ClearITPendingBit) refers to hk32f030m_usart.o(.text.USART_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_SetLatency) refers to hk32f030m_flash.o(.text.FLASH_SetLatency) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_Unlock) refers to hk32f030m_flash.o(.text.FLASH_Unlock) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_Lock) refers to hk32f030m_flash.o(.text.FLASH_Lock) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_ErasePage) refers to hk32f030m_flash.o(.text.FLASH_ErasePage) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation) refers to hk32f030m_flash.o(.text.FLASH_WaitForLastOperation) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_EraseAllPages) refers to hk32f030m_flash.o(.text.FLASH_EraseAllPages) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_ProgramHalfWord) refers to hk32f030m_flash.o(.text.FLASH_ProgramHalfWord) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_ProgramByte) refers to hk32f030m_flash.o(.text.FLASH_ProgramByte) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_Unlock) refers to hk32f030m_flash.o(.text.FLASH_OB_Unlock) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_Lock) refers to hk32f030m_flash.o(.text.FLASH_OB_Lock) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_EraseByte) refers to hk32f030m_flash.o(.text.FLASH_OB_EraseByte) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_WRPConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_WRPConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_RDPConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_RDPConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_UserConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_UserConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_IWDG_RLRConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_IWDG_RLRConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_LSILPConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_LSILPConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_DBGCLKConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_DBGCLKConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_WriteUser) refers to hk32f030m_flash.o(.text.FLASH_OB_WriteUser) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_ProgramData) refers to hk32f030m_flash.o(.text.FLASH_OB_ProgramData) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetUser) refers to hk32f030m_flash.o(.text.FLASH_OB_GetUser) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetWRP) refers to hk32f030m_flash.o(.text.FLASH_OB_GetWRP) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetRDP) refers to hk32f030m_flash.o(.text.FLASH_OB_GetRDP) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_ITConfig) refers to hk32f030m_flash.o(.text.FLASH_ITConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus) refers to hk32f030m_flash.o(.text.FLASH_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_ClearFlag) refers to hk32f030m_flash.o(.text.FLASH_ClearFlag) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_GetStatus) refers to hk32f030m_flash.o(.text.FLASH_GetStatus) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.EEPROM_EraseByte) refers to hk32f030m_flash.o(.text.EEPROM_EraseByte) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.EEPROM_ProgramByte) refers to hk32f030m_flash.o(.text.EEPROM_ProgramByte) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.Sys_GetDevice64BitUID) refers to hk32f030m_flash.o(.text.Sys_GetDevice64BitUID) for [Anonymous Symbol]
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    d2f.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dcmp.o(i._deq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dcmp.o(i._deq) refers to deqf.o(x$fpl$deqf) for _dcmpeq
    dcmp.o(i._dgeq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dcmp.o(i._dgeq) refers to dgef.o(x$fpl$dgeqf) for _dcmpge
    dcmp.o(i._dgr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dcmp.o(i._dgr) refers to dgef.o(x$fpl$dgeqf) for _dcmpge
    dcmp.o(i._dleq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dcmp.o(i._dleq) refers to dlef.o(x$fpl$dleqf) for _dcmple
    dcmp.o(i._dls) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dcmp.o(i._dls) refers to dlef.o(x$fpl$dleqf) for _dcmple
    dcmp.o(i._dneq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dcmp.o(i._dneq) refers to deqf.o(x$fpl$deqf) for _dcmpeq
    dfixi.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflti.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    f2d.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fadd) for _fadd1
    faddsub.o(x$fpl$fsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fsub) refers to faddsub.o(x$fpl$fadd) for _fadd1
    fcmp.o(i._feq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._feq) refers to feqf.o(x$fpl$feqf) for _fcmpeq
    fcmp.o(i._fgeq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fgeq) refers to fgef.o(x$fpl$fgeqf) for _fcmpge
    fcmp.o(i._fgr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fgr) refers to fgef.o(x$fpl$fgeqf) for _fcmpge
    fcmp.o(i._fleq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fleq) refers to flef.o(x$fpl$fleqf) for _fcmple
    fcmp.o(i._fls) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fls) refers to flef.o(x$fpl$fleqf) for _fcmple
    fcmp.o(i._fneq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fneq) refers to feqf.o(x$fpl$feqf) for _fcmpeq
    fdiv.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(.text) refers to fdiv.o(.constdata) for .constdata
    fdiv.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixi.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflti.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    deqf.o(x$fpl$deqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    deqf.o(x$fpl$deqf) refers to dcmpin.o(.text) for __fpl_dcmp_InfNaN
    dgef.o(x$fpl$dgeqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dgef.o(x$fpl$dgeqf) refers to dcmpin.o(.text) for __fpl_dcmp_InfNaN
    dlef.o(x$fpl$dleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dlef.o(x$fpl$dleqf) refers to dcmpin.o(.text) for __fpl_dcmp_InfNaN
    feqf.o(x$fpl$feqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    feqf.o(x$fpl$feqf) refers to fcmpin.o(.text) for __fpl_fcmp_InfNaN
    fgef.o(x$fpl$fgeqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fgef.o(x$fpl$fgeqf) refers to fcmpin.o(.text) for __fpl_fcmp_InfNaN
    flef.o(x$fpl$fleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    flef.o(x$fpl$fleqf) refers to fcmpin.o(.text) for __fpl_fcmp_InfNaN
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    dcmpin.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dcmpin.o(.text) refers to cmpret.o(.text) for __fpl_cmpreturn
    dcmpin.o(.text) refers to dnan2.o(.text) for __fpl_dcheck_NaN2
    fcmpin.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmpin.o(.text) refers to cmpret.o(.text) for __fpl_cmpreturn
    fcmpin.o(.text) refers to fnan2.o(.text) for __fpl_fcheck_NaN2
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to keil_startup_hk32f030m.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    cmpret.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dnan2.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dnan2.o(.text) refers to retnan.o(.text) for __fpl_return_NaN
    fnan2.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnan2.o(.text) refers to retnan.o(.text) for __fpl_return_NaN
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    retnan.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    retnan.o(.text) refers to cmpret.o(.text) for __fpl_cmpreturn
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing hk32f030m_it.o(.text), (0 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.TIM6_IRQHandler), (8 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing system_hk32f030m.o(.text), (0 bytes).
    Removing system_hk32f030m.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_hk32f030m.o(.text.SystemCoreClockUpdate), (68 bytes).
    Removing system_hk32f030m.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_hk32f030m.o(.data.SystemCoreClock), (4 bytes).
    Removing ws2812.o(.text), (0 bytes).
    Removing ws2812.o(.ARM.exidx.text.WS2812_Init), (8 bytes).
    Removing ws2812.o(.ARM.exidx.text.WS2812_Set_Colour), (8 bytes).
    Removing ws2812.o(.text.WS2812_Left), (68 bytes).
    Removing ws2812.o(.ARM.exidx.text.WS2812_Left), (8 bytes).
    Removing ws2812.o(.text.delay), (2 bytes).
    Removing ws2812.o(.ARM.exidx.text.delay), (8 bytes).
    Removing ws2812.o(.ARM.exidx.text.WS2812_Refresh), (8 bytes).
    Removing crc.o(.text), (0 bytes).
    Removing crc.o(.ARM.exidx.text.crc16), (8 bytes).
    Removing vesc_uasrt.o(.text), (0 bytes).
    Removing vesc_uasrt.o(.text.Send_Pack_Data), (100 bytes).
    Removing vesc_uasrt.o(.ARM.exidx.text.Send_Pack_Data), (8 bytes).
    Removing vesc_uasrt.o(.ARM.exidx.text.Get_Vesc_Pack_Data), (8 bytes).
    Removing vesc_uasrt.o(.text.buffer_get_int16), (20 bytes).
    Removing vesc_uasrt.o(.ARM.exidx.text.buffer_get_int16), (8 bytes).
    Removing vesc_uasrt.o(.text.buffer_get_uint16), (20 bytes).
    Removing vesc_uasrt.o(.ARM.exidx.text.buffer_get_uint16), (8 bytes).
    Removing vesc_uasrt.o(.text.buffer_get_int32), (32 bytes).
    Removing vesc_uasrt.o(.ARM.exidx.text.buffer_get_int32), (8 bytes).
    Removing vesc_uasrt.o(.text.buffer_get_uint32), (32 bytes).
    Removing vesc_uasrt.o(.ARM.exidx.text.buffer_get_uint32), (8 bytes).
    Removing vesc_uasrt.o(.text.buffer_get_float16), (34 bytes).
    Removing vesc_uasrt.o(.ARM.exidx.text.buffer_get_float16), (8 bytes).
    Removing vesc_uasrt.o(.text.buffer_get_float32), (44 bytes).
    Removing vesc_uasrt.o(.ARM.exidx.text.buffer_get_float32), (8 bytes).
    Removing vesc_uasrt.o(.ARM.exidx.text.Protocol_Parse), (8 bytes).
    Removing test.o(.text), (0 bytes).
    Removing test.o(.text.Test_Charge), (192 bytes).
    Removing test.o(.ARM.exidx.text.Test_Charge), (8 bytes).
    Removing test.o(.text.Test_LED), (228 bytes).
    Removing test.o(.ARM.exidx.text.Test_LED), (8 bytes).
    Removing test.o(.text.Test_USART), (136 bytes).
    Removing test.o(.ARM.exidx.text.Test_USART), (8 bytes).
    Removing test.o(.text.Test_ADC), (164 bytes).
    Removing test.o(.ARM.exidx.text.Test_ADC), (8 bytes).
    Removing test.o(.text.Test_Task), (172 bytes).
    Removing test.o(.ARM.exidx.text.Test_Task), (8 bytes).
    Removing test.o(.bss.Test_Step), (1 bytes).
    Removing test.o(.bss.Test_Counter), (2 bytes).
    Removing test.o(.bss.Test_Charge.test_charge), (1 bytes).
    Removing test.o(.bss.Test_LED.test_led), (1 bytes).
    Removing test.o(.bss.Test_LED.led_b_f), (1 bytes).
    Removing test.o(.bss.Test_LED.led_pwm), (2 bytes).
    Removing test.o(.bss.Test_LED.pwm_st), (1 bytes).
    Removing test.o(.bss.Test_LED.pwm_cnt), (1 bytes).
    Removing test.o(.bss.Test_USART.test_usart), (1 bytes).
    Removing test.o(.bss.adc1_voltage), (4 bytes).
    Removing test.o(.bss.adc2_voltage), (4 bytes).
    Removing test.o(.bss.charge_voltage), (4 bytes).
    Removing test.o(.bss.Test_ADC.test_adc), (1 bytes).
    Removing task.o(.text), (0 bytes).
    Removing task.o(.text.LED_Task), (2 bytes).
    Removing task.o(.ARM.exidx.text.LED_Task), (8 bytes).
    Removing task.o(.ARM.exidx.text.KEY1_Task), (8 bytes).
    Removing task.o(.ARM.exidx.text.Power_Display), (8 bytes).
    Removing task.o(.ARM.exidx.text.Sensor_Activation_Diplay), (8 bytes).
    Removing task.o(.ARM.exidx.text.WS2812_Boot), (8 bytes).
    Removing task.o(.text.WS2812_Cal_Bri), (52 bytes).
    Removing task.o(.ARM.exidx.text.WS2812_Cal_Bri), (8 bytes).
    Removing task.o(.ARM.exidx.text.WS2812_Charge), (8 bytes).
    Removing task.o(.ARM.exidx.text.WS2812_Task), (8 bytes).
    Removing task.o(.ARM.exidx.text.Power_Task), (8 bytes).
    Removing task.o(.ARM.exidx.text.Charge_Task), (8 bytes).
    Removing task.o(.ARM.exidx.text.Flashlight_Bright), (8 bytes).
    Removing task.o(.ARM.exidx.text.Flashlight_Task), (8 bytes).
    Removing task.o(.ARM.exidx.text.Flashlight_Detection), (8 bytes).
    Removing task.o(.ARM.exidx.text.Buzzer_Task), (8 bytes).
    Removing task.o(.ARM.exidx.text.Usart_Task), (8 bytes).
    Removing task.o(.ARM.exidx.text.ADC_Task), (8 bytes).
    Removing task.o(.text.Apply_BatteryPowerFlag), (48 bytes).
    Removing task.o(.ARM.exidx.text.Apply_BatteryPowerFlag), (8 bytes).
    Removing task.o(.ARM.exidx.text.Conditional_Judgment), (8 bytes).
    Removing flag_bit.o(.text), (0 bytes).
    Removing led.o(.text), (0 bytes).
    Removing led.o(.ARM.exidx.text.LED_Init), (8 bytes).
    Removing time.o(.text), (0 bytes).
    Removing time.o(.ARM.exidx.text.Time6_Init), (8 bytes).
    Removing spi.o(.text), (0 bytes).
    Removing spi.o(.text.SPI_Config), (116 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_Config), (8 bytes).
    Removing spi.o(.text.SPI1_Send_Byte), (16 bytes).
    Removing spi.o(.ARM.exidx.text.SPI1_Send_Byte), (8 bytes).
    Removing power.o(.text), (0 bytes).
    Removing power.o(.ARM.exidx.text.Power_Init), (8 bytes).
    Removing led_pwm.o(.text), (0 bytes).
    Removing led_pwm.o(.ARM.exidx.text.LED_PWM_Init), (8 bytes).
    Removing key.o(.text), (0 bytes).
    Removing key.o(.ARM.exidx.text.KEY_Init), (8 bytes).
    Removing key.o(.ARM.exidx.text.KEY1_Scan), (8 bytes).
    Removing buzzer.o(.text), (0 bytes).
    Removing buzzer.o(.ARM.exidx.text.Buzzer_Init), (8 bytes).
    Removing buzzer.o(.ARM.exidx.text.Buzzer_Scan), (8 bytes).
    Removing buzzer.o(.ARM.exidx.text.Buzzer_Ring), (8 bytes).
    Removing usart.o(.text), (0 bytes).
    Removing usart.o(.ARM.exidx.text.USART1_Init), (8 bytes).
    Removing usart.o(.text.USART1_Send_Byte), (16 bytes).
    Removing usart.o(.ARM.exidx.text.USART1_Send_Byte), (8 bytes).
    Removing usart.o(.ARM.exidx.text.USART1_Send_Bytes), (8 bytes).
    Removing adc.o(.text), (0 bytes).
    Removing adc.o(.ARM.exidx.text.ADC1_Init), (8 bytes).
    Removing adc.o(.ARM.exidx.text.Read_ADC_Value), (8 bytes).
    Removing io_ws2812.o(.text), (0 bytes).
    Removing io_ws2812.o(.ARM.exidx.text.IO_WS2812_Init), (8 bytes).
    Removing io_ws2812.o(.ARM.exidx.text.WS2812_0_Code), (8 bytes).
    Removing io_ws2812.o(.ARM.exidx.text.WS2812_1_Code), (8 bytes).
    Removing hk32f030m_adc.o(.text), (0 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_DeInit), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_StructInit), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_Cmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_ClockModeConfig), (4 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ClockModeConfig), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_JitterCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_JitterCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AutoPowerOffCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AutoPowerOffCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_WaitModeCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_WaitModeCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AnalogWatchdogCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig), (14 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AnalogWatchdogSingleChannelCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_VrefintCmd), (26 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_VrefintCmd), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ChannelConfig), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_ContinuousModeCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ContinuousModeCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_DiscModeCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_DiscModeCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_OverrunModeCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_OverrunModeCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_GetCalibrationFactor), (44 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_GetCalibrationFactor), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_StopOfConversion), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_StartOfConversion), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_GetConversionValue), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_ITConfig), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ITConfig), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_GetFlagStatus), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ClearFlag), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_GetITStatus), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_GetITStatus), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_ClearITPendingBit), (4 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AWDWakeup_Cmd), (28 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AWDWakeup_Cmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_Diff_Func), (24 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_Diff_Func), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_InterDelay_Func), (22 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_InterDelay_Func), (8 bytes).
    Removing hk32f030m_gpio.o(.text), (0 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_DeInit), (44 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_StructInit), (16 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_StructInit), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_PinLockConfig), (36 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_ReadInputDataBit), (10 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_ReadInputData), (6 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadInputData), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_ReadOutputDataBit), (10 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_ReadOutputData), (6 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_SetBits), (4 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_SetBits), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_ResetBits), (4 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ResetBits), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_WriteBit), (16 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_WriteBit), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_Write), (4 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Write), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_Toggle), (8 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Toggle), (8 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_IOMUX_PinAFConfig), (116 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_PinAFConfig), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_IOMUX_ChangePin), (52 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_ChangePin), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_IOMUX_SetTIM2CN1_Source), (12 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_SetTIM2CN1_Source), (8 bytes).
    Removing hk32f030m_gpio.o(.rodata.cst16), (16 bytes).
    Removing hk32f030m_iwdg.o(.text), (0 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_WriteAccessCmd), (12 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_SetPrescaler), (12 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_SetReload), (12 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetReload), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_ReloadCounter), (16 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_SetWindowValue), (12 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetWindowValue), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_Enable), (16 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_Enable), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_GetFlagStatus), (16 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus), (8 bytes).
    Removing hk32f030m_misc.o(.text), (0 bytes).
    Removing hk32f030m_misc.o(.ARM.exidx.text.NVIC_Init), (8 bytes).
    Removing hk32f030m_misc.o(.text.NVIC_SystemLPConfig), (28 bytes).
    Removing hk32f030m_misc.o(.ARM.exidx.text.NVIC_SystemLPConfig), (8 bytes).
    Removing hk32f030m_misc.o(.text.SysTick_CLKSourceConfig), (28 bytes).
    Removing hk32f030m_misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text), (0 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_DeInit), (40 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_DeInit), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_WaitForStartUp), (92 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_WaitForStartUp), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_GetFlagStatus), (40 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_AdjustHSICalibrationValue), (20 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_HSICmd), (24 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_HSICmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_LSICmd), (24 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_LSICmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_EXTCmd), (88 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_EXTCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_ClockSecuritySystemCmd), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_MCOConfig), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_MCOConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_SYSCLKConfig), (20 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_GetSYSCLKSource), (16 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_HCLKConfig), (20 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_HCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_PCLKConfig), (20 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_PCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_ADCCLKConfig), (64 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_I2CCLKConfig), (24 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_I2CCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_USARTCLKConfig), (24 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_USARTCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq), (8 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_AHBPeriphResetCmd), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_APB1PeriphResetCmd), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_ITConfig), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_ITConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_ClearFlag), (20 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClearFlag), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_GetITStatus), (16 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetITStatus), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_ClearITPendingBit), (12 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit), (8 bytes).
    Removing hk32f030m_spi.o(.text), (0 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_DeInit), (36 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_DeInit), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_StructInit), (26 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_StructInit), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_Init), (88 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_Init), (8 bytes).
    Removing hk32f030m_spi.o(.text.I2S_StructInit), (14 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.I2S_StructInit), (8 bytes).
    Removing hk32f030m_spi.o(.text.I2S_Init), (184 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.I2S_Init), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_Cmd), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_Cmd), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_TIModeCmd), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_TIModeCmd), (8 bytes).
    Removing hk32f030m_spi.o(.text.I2S_Cmd), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.I2S_Cmd), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_DataSizeConfig), (16 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_DataSizeConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_RxFIFOThresholdConfig), (20 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_RxFIFOThresholdConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_BiDirectionalLineConfig), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_BiDirectionalLineConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_NSSInternalSoftwareConfig), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_NSSInternalSoftwareConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_SSOutputCmd), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_SSOutputCmd), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_NSSPulseModeCmd), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_NSSPulseModeCmd), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_SendData8), (4 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_SendData8), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_SendData16), (4 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_SendData16), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_ReceiveData8), (4 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_ReceiveData8), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_ReceiveData16), (6 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ReceiveData16), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_CRCLengthConfig), (20 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_CRCLengthConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_CalculateCRC), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_CalculateCRC), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_TransmitCRC), (12 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_TransmitCRC), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_GetCRC), (16 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_GetCRC), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_GetCRCPolynomial), (6 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_GetCRCPolynomial), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_ITConfig), (36 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ITConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_GetTransmissionFIFOStatus), (10 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_GetTransmissionFIFOStatus), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_GetReceptionFIFOStatus), (10 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_GetReceptionFIFOStatus), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_GetFlagStatus), (10 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_GetFlagStatus), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_ClearFlag), (12 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ClearFlag), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_GetITStatus), (22 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_GetITStatus), (8 bytes).
    Removing hk32f030m_syscfg.o(.text), (0 bytes).
    Removing hk32f030m_syscfg.o(.text.SYSCFG_DeInit), (22 bytes).
    Removing hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_DeInit), (8 bytes).
    Removing hk32f030m_syscfg.o(.text.SYSCFG_Lockup_Tim1BreakConfig), (24 bytes).
    Removing hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_Lockup_Tim1BreakConfig), (8 bytes).
    Removing hk32f030m_syscfg.o(.text.SYSCFG_MemoryRemapConfig), (28 bytes).
    Removing hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_MemoryRemapConfig), (8 bytes).
    Removing hk32f030m_syscfg.o(.text.SYSCFG_EXTILineConfig), (36 bytes).
    Removing hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_EXTILineConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text), (0 bytes).
    Removing hk32f030m_tim.o(.text.TIM_DeInit), (88 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_DeInit), (8 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_TimeBaseInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_TimeBaseStructInit), (12 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_PrescalerConfig), (6 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_PrescalerConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_CounterModeConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_CounterModeConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetCounter), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCounter), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetAutoreload), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetAutoreload), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetCounter), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCounter), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetPrescaler), (6 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetPrescaler), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_UpdateDisableConfig), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_UpdateRequestConfig), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ARRPreloadConfig), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectOnePulseMode), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetClockDivision), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetClockDivision), (8 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_Cmd), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_BDTRConfig), (30 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_BDTRConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_BDTRStructInit), (18 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_BDTRStructInit), (8 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC1Init), (104 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1Init), (8 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2Init), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC3Init), (120 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3Init), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC4Init), (108 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4Init), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OCStructInit), (14 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OCStructInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectOCxM), (68 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOCxM), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetCompare1), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare1), (8 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare2), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetCompare3), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare3), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetCompare4), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare4), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ForcedOC1Config), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ForcedOC2Config), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ForcedOC3Config), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ForcedOC4Config), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_CCPreloadControl), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_CCPreloadControl), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC1PreloadConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC2PreloadConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC3PreloadConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC4PreloadConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC1FastConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1FastConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC2FastConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2FastConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC3FastConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3FastConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC4FastConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4FastConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ClearOC1Ref), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ClearOC2Ref), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ClearOC3Ref), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ClearOC4Ref), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC1PolarityConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC1NPolarityConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC2PolarityConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC2NPolarityConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC3PolarityConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC3NPolarityConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC4PolarityConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectOCREFClear), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOCREFClear), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_CCxCmd), (26 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_CCxCmd), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_CCxNCmd), (36 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_CCxNCmd), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectCOM), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectCOM), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ICInit), (316 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ICInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetIC1Prescaler), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetIC2Prescaler), (24 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetIC3Prescaler), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetIC4Prescaler), (24 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ICStructInit), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ICStructInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_PWMIConfig), (296 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_PWMIConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetCapture1), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture1), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetCapture2), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture2), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetCapture3), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture3), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetCapture4), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture4), (8 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ITConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GenerateEvent), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GenerateEvent), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetFlagStatus), (10 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetFlagStatus), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ClearFlag), (12 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearFlag), (8 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetITStatus), (8 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_InternalClockConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_InternalClockConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ITRxExternalClockConfig), (24 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectInputTrigger), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_TIxExternalClockConfig), (124 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ETRClockMode1Config), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ETRConfig), (18 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ETRClockMode2Config), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectOutputTrigger), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectSlaveMode), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectMasterSlaveMode), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_EncoderInterfaceConfig), (52 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectHallSensor), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectHallSensor), (8 bytes).
    Removing hk32f030m_usart.o(.text), (0 bytes).
    Removing hk32f030m_usart.o(.text.USART_DeInit), (36 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_DeInit), (8 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_Init), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_StructInit), (22 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_StructInit), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ClockInit), (26 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ClockInit), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ClockStructInit), (12 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ClockStructInit), (8 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_Cmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_DirectionModeCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_DirectionModeCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_OverSampling8Cmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_OneBitMethodCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_MSBFirstCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_MSBFirstCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_DataInvCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_DataInvCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_InvPinCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_InvPinCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SWAPPinCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SWAPPinCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ReceiverTimeOutCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ReceiverTimeOutCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetReceiverTimeOut), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetReceiverTimeOut), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetPrescaler), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetPrescaler), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_STOPModeCmd), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_STOPModeCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_StopModeWakeUpSourceConfig), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_StopModeWakeUpSourceConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_AutoBaudRateCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_AutoBaudRateCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_AutoBaudRateConfig), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_AutoBaudRateConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SendData), (12 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SendData), (8 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ReceiveData), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetAddress), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetAddress), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_MuteModeCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_MuteModeCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_MuteModeWakeUpConfig), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_MuteModeWakeUpConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_AddressDetectionConfig), (16 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_AddressDetectionConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_LINBreakDetectLengthConfig), (16 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_LINBreakDetectLengthConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_LINCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_LINCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_HalfDuplexCmd), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetGuardTime), (16 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetGuardTime), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SmartCardCmd), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SmartCardCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SmartCardNACKCmd), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SmartCardNACKCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetAutoRetryCount), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetAutoRetryCount), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetBlockLength), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetBlockLength), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_IrDAConfig), (16 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_IrDAConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_IrDACmd), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_IrDACmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_DECmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_DECmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_DEPolarityConfig), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_DEPolarityConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetDEAssertionTime), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetDEAssertionTime), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetDEDeassertionTime), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetDEDeassertionTime), (8 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ITConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_RequestCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_RequestCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_OverrunDetectionConfig), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_OverrunDetectionConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_GetFlagStatus), (10 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_GetFlagStatus), (8 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ClearFlag), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_GetITStatus), (42 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_GetITStatus), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ClearITPendingBit), (10 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ClearITPendingBit), (8 bytes).
    Removing hk32f030m_flash.o(.text), (0 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_SetLatency), (20 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_SetLatency), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_Unlock), (32 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_Unlock), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_Lock), (16 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_Lock), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_ErasePage), (192 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_ErasePage), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_WaitForLastOperation), (100 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_EraseAllPages), (184 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_EraseAllPages), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_ProgramHalfWord), (180 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_ProgramHalfWord), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_ProgramByte), (180 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_ProgramByte), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_Unlock), (32 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_Unlock), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_Lock), (20 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_Lock), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_EraseByte), (192 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_EraseByte), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_WRPConfig), (636 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_WRPConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_RDPConfig), (412 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_RDPConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_UserConfig), (408 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_UserConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_IWDG_RLRConfig), (432 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_IWDG_RLRConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_LSILPConfig), (332 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_LSILPConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_DBGCLKConfig), (332 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_DBGCLKConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_WriteUser), (204 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_WriteUser), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_ProgramData), (200 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_ProgramData), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_GetUser), (16 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetUser), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_GetWRP), (12 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetWRP), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_GetRDP), (20 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetRDP), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_ITConfig), (28 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_ITConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_GetFlagStatus), (16 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_ClearFlag), (12 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_ClearFlag), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_GetStatus), (32 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_GetStatus), (8 bytes).
    Removing hk32f030m_flash.o(.text.EEPROM_EraseByte), (192 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.EEPROM_EraseByte), (8 bytes).
    Removing hk32f030m_flash.o(.text.EEPROM_ProgramByte), (184 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.EEPROM_ProgramByte), (8 bytes).
    Removing hk32f030m_flash.o(.text.Sys_GetDevice64BitUID), (16 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.Sys_GetDevice64BitUID), (8 bytes).

656 unused section(s) (total 14708 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/cmp.c                    0x00000000   Number         0  dcmp.o ABSOLUTE
    ../fplib/cfplib/cmp.c                    0x00000000   Number         0  fcmp.o ABSOLUTE
    ../fplib/cfplib/cmpret.c                 0x00000000   Number         0  cmpret.o ABSOLUTE
    ../fplib/cfplib/d2f.c                    0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/cfplib/daddsub.c                0x00000000   Number         0  daddsub.o ABSOLUTE
    ../fplib/cfplib/dcmpin.c                 0x00000000   Number         0  dcmpin.o ABSOLUTE
    ../fplib/cfplib/dmul.c                   0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/cfplib/f2d.c                    0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/cfplib/fcmpin.c                 0x00000000   Number         0  fcmpin.o ABSOLUTE
    ../fplib/cfplib/fdiv.c                   0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  ffixi.o ABSOLUTE
    ../fplib/cfplib/fflt.c                   0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/cfplib/fflt.c                   0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/cfplib/nan2.c                   0x00000000   Number         0  dnan2.o ABSOLUTE
    ../fplib/cfplib/nan2.c                   0x00000000   Number         0  fnan2.o ABSOLUTE
    ../fplib/cfplib/retnan.c                 0x00000000   Number         0  retnan.o ABSOLUTE
    ../fplib/deqf6m.s                        0x00000000   Number         0  deqf.o ABSOLUTE
    ../fplib/dgeqf6m.s                       0x00000000   Number         0  dgef.o ABSOLUTE
    ../fplib/dleqf6m.s                       0x00000000   Number         0  dlef.o ABSOLUTE
    ../fplib/faddsub6m.s                     0x00000000   Number         0  faddsub.o ABSOLUTE
    ../fplib/feqf6m.s                        0x00000000   Number         0  feqf.o ABSOLUTE
    ../fplib/fgeqf6m.s                       0x00000000   Number         0  fgef.o ABSOLUTE
    ../fplib/fleqf6m.s                       0x00000000   Number         0  flef.o ABSOLUTE
    ../fplib/fmul6m.s                        0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ..\..\Library\HK32F030Mxx_Library_V1.1.6\HK32F030M\CMSIS\HK32F030M\Source\ARM\KEIL_Startup_hk32f030m.s 0x00000000   Number         0  keil_startup_hk32f030m.o ABSOLUTE
    adc.c                                    0x00000000   Number         0  adc.o ABSOLUTE
    buzzer.c                                 0x00000000   Number         0  buzzer.o ABSOLUTE
    crc.c                                    0x00000000   Number         0  crc.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    flag_bit.c                               0x00000000   Number         0  flag_bit.o ABSOLUTE
    hk32f030m_adc.c                          0x00000000   Number         0  hk32f030m_adc.o ABSOLUTE
    hk32f030m_flash.c                        0x00000000   Number         0  hk32f030m_flash.o ABSOLUTE
    hk32f030m_gpio.c                         0x00000000   Number         0  hk32f030m_gpio.o ABSOLUTE
    hk32f030m_it.c                           0x00000000   Number         0  hk32f030m_it.o ABSOLUTE
    hk32f030m_iwdg.c                         0x00000000   Number         0  hk32f030m_iwdg.o ABSOLUTE
    hk32f030m_misc.c                         0x00000000   Number         0  hk32f030m_misc.o ABSOLUTE
    hk32f030m_rcc.c                          0x00000000   Number         0  hk32f030m_rcc.o ABSOLUTE
    hk32f030m_spi.c                          0x00000000   Number         0  hk32f030m_spi.o ABSOLUTE
    hk32f030m_syscfg.c                       0x00000000   Number         0  hk32f030m_syscfg.o ABSOLUTE
    hk32f030m_tim.c                          0x00000000   Number         0  hk32f030m_tim.o ABSOLUTE
    hk32f030m_usart.c                        0x00000000   Number         0  hk32f030m_usart.o ABSOLUTE
    io_ws2812.c                              0x00000000   Number         0  io_ws2812.o ABSOLUTE
    key.c                                    0x00000000   Number         0  key.o ABSOLUTE
    led.c                                    0x00000000   Number         0  led.o ABSOLUTE
    led_pwm.c                                0x00000000   Number         0  led_pwm.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    power.c                                  0x00000000   Number         0  power.o ABSOLUTE
    spi.c                                    0x00000000   Number         0  spi.o ABSOLUTE
    system_hk32f030m.c                       0x00000000   Number         0  system_hk32f030m.o ABSOLUTE
    task.c                                   0x00000000   Number         0  task.o ABSOLUTE
    test.c                                   0x00000000   Number         0  test.o ABSOLUTE
    time.c                                   0x00000000   Number         0  time.o ABSOLUTE
    usart.c                                  0x00000000   Number         0  usart.o ABSOLUTE
    vesc_uasrt.c                             0x00000000   Number         0  vesc_uasrt.o ABSOLUTE
    ws2812.c                                 0x00000000   Number         0  ws2812.o ABSOLUTE
    RESET                                    0x08000000   Section      192  keil_startup_hk32f030m.o(RESET)
    !!!main                                  0x080000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000c8   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000104   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000120   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0800013c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0800013e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000140   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000142   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000144   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000144   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000144   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0800014a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0800014a   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0800014e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0800014e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000156   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000158   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000158   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0800015c   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x08000164   Section       56  keil_startup_hk32f030m.o(.text)
    .text                                    0x0800019c   Section        0  aeabi_memset4.o(.text)
    .text                                    0x080001ae   Section        0  heapauxi.o(.text)
    .text                                    0x080001b4   Section        0  d2f.o(.text)
    _dadd1                                   0x08000231   Thumb Code   290  daddsub.o(.text)
    .text                                    0x08000230   Section        0  daddsub.o(.text)
    _dsub1                                   0x08000353   Thumb Code   470  daddsub.o(.text)
    .text                                    0x08000588   Section        0  dfixi.o(.text)
    .text                                    0x080005f4   Section        0  dflti.o(.text)
    .text                                    0x0800064c   Section        0  dmul.o(.text)
    .text                                    0x08000894   Section        0  f2d.o(.text)
    .text                                    0x080008e8   Section        0  fdiv.o(.text)
    .text                                    0x08000a48   Section        0  ffixi.o(.text)
    .text                                    0x08000a94   Section        0  fflti.o(.text)
    .text                                    0x08000af2   Section        0  rt_memclr.o(.text)
    .text                                    0x08000b34   Section        0  dcmpin.o(.text)
    .text                                    0x08000bd4   Section        0  fcmpin.o(.text)
    .text                                    0x08000c38   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x08000c76   Section        0  exit.o(.text)
    .text                                    0x08000c86   Section        0  cmpret.o(.text)
    .text                                    0x08000cb4   Section        0  dnan2.o(.text)
    .text                                    0x08000cc8   Section        0  fnan2.o(.text)
    .text                                    0x08000cd8   Section        8  libspace.o(.text)
    .text                                    0x08000ce0   Section        0  retnan.o(.text)
    .text                                    0x08000d40   Section        0  sys_exit.o(.text)
    .text                                    0x08000d4c   Section        2  use_no_semi.o(.text)
    .text                                    0x08000d4e   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x08000d50   Section        0  adc.o(.text.ADC1_Init)
    __arm_cp.0_0                             0x08000de8   Number         4  adc.o(.text.ADC1_Init)
    __arm_cp.0_1                             0x08000dec   Number         4  adc.o(.text.ADC1_Init)
    [Anonymous Symbol]                       0x08000df0   Section        0  hk32f030m_adc.o(.text.ADC_ChannelConfig)
    [Anonymous Symbol]                       0x08000df6   Section        0  hk32f030m_adc.o(.text.ADC_ClearFlag)
    [Anonymous Symbol]                       0x08000dfa   Section        0  hk32f030m_adc.o(.text.ADC_Cmd)
    [Anonymous Symbol]                       0x08000e0c   Section        0  hk32f030m_adc.o(.text.ADC_DeInit)
    __arm_cp.0_0                             0x08000e2c   Number         4  hk32f030m_adc.o(.text.ADC_DeInit)
    [Anonymous Symbol]                       0x08000e30   Section        0  hk32f030m_adc.o(.text.ADC_GetConversionValue)
    [Anonymous Symbol]                       0x08000e36   Section        0  hk32f030m_adc.o(.text.ADC_GetFlagStatus)
    [Anonymous Symbol]                       0x08000e50   Section        0  hk32f030m_adc.o(.text.ADC_Init)
    __arm_cp.1_0                             0x08000e70   Number         4  hk32f030m_adc.o(.text.ADC_Init)
    [Anonymous Symbol]                       0x08000e74   Section        0  hk32f030m_adc.o(.text.ADC_StartOfConversion)
    [Anonymous Symbol]                       0x08000e7e   Section        0  hk32f030m_adc.o(.text.ADC_StopOfConversion)
    [Anonymous Symbol]                       0x08000e88   Section        0  hk32f030m_adc.o(.text.ADC_StructInit)
    [Anonymous Symbol]                       0x08000e98   Section        0  task.o(.text.ADC_Task)
    __arm_cp.15_0                            0x08000f58   Number         4  task.o(.text.ADC_Task)
    __arm_cp.15_1                            0x08000f5c   Number         4  task.o(.text.ADC_Task)
    __arm_cp.15_2                            0x08000f60   Number         4  task.o(.text.ADC_Task)
    __arm_cp.15_3                            0x08000f64   Number         4  task.o(.text.ADC_Task)
    __arm_cp.15_4                            0x08000f68   Number         4  task.o(.text.ADC_Task)
    __arm_cp.15_5                            0x08000f6c   Number         4  task.o(.text.ADC_Task)
    __arm_cp.15_6                            0x08000f70   Number         4  task.o(.text.ADC_Task)
    __arm_cp.15_7                            0x08000f74   Number         4  task.o(.text.ADC_Task)
    __arm_cp.15_10                           0x08000f78   Number         4  task.o(.text.ADC_Task)
    __arm_cp.15_11                           0x08000f7c   Number         4  task.o(.text.ADC_Task)
    __arm_cp.15_12                           0x08000f80   Number         4  task.o(.text.ADC_Task)
    __arm_cp.15_13                           0x08000f84   Number         4  task.o(.text.ADC_Task)
    __arm_cp.15_14                           0x08000f88   Number         4  task.o(.text.ADC_Task)
    __arm_cp.15_15                           0x08000f8c   Number         4  task.o(.text.ADC_Task)
    [Anonymous Symbol]                       0x08000f90   Section        0  buzzer.o(.text.Buzzer_Init)
    [Anonymous Symbol]                       0x08000fb8   Section        0  buzzer.o(.text.Buzzer_Ring)
    [Anonymous Symbol]                       0x08000fc0   Section        0  buzzer.o(.text.Buzzer_Scan)
    __arm_cp.1_0                             0x08000fec   Number         4  buzzer.o(.text.Buzzer_Scan)
    __arm_cp.1_1                             0x08000ff0   Number         4  buzzer.o(.text.Buzzer_Scan)
    [Anonymous Symbol]                       0x08000ff4   Section        0  task.o(.text.Buzzer_Task)
    __arm_cp.13_0                            0x080010d4   Number         4  task.o(.text.Buzzer_Task)
    __arm_cp.13_1                            0x080010d8   Number         4  task.o(.text.Buzzer_Task)
    __arm_cp.13_2                            0x080010dc   Number         4  task.o(.text.Buzzer_Task)
    __arm_cp.13_3                            0x080010e0   Number         4  task.o(.text.Buzzer_Task)
    __arm_cp.13_4                            0x080010e4   Number         4  task.o(.text.Buzzer_Task)
    __arm_cp.13_5                            0x080010e8   Number         4  task.o(.text.Buzzer_Task)
    __arm_cp.13_6                            0x080010ec   Number         4  task.o(.text.Buzzer_Task)
    __arm_cp.13_7                            0x080010f0   Number         4  task.o(.text.Buzzer_Task)
    __arm_cp.13_8                            0x080010f4   Number         4  task.o(.text.Buzzer_Task)
    __arm_cp.13_9                            0x080010f8   Number         4  task.o(.text.Buzzer_Task)
    __arm_cp.13_10                           0x080010fc   Number         4  task.o(.text.Buzzer_Task)
    __arm_cp.13_11                           0x08001100   Number         4  task.o(.text.Buzzer_Task)
    __arm_cp.13_12                           0x08001104   Number         4  task.o(.text.Buzzer_Task)
    [Anonymous Symbol]                       0x08001108   Section        0  task.o(.text.Charge_Task)
    __arm_cp.9_0                             0x08001198   Number         4  task.o(.text.Charge_Task)
    __arm_cp.9_1                             0x0800119c   Number         4  task.o(.text.Charge_Task)
    __arm_cp.9_2                             0x080011a0   Number         4  task.o(.text.Charge_Task)
    __arm_cp.9_3                             0x080011a4   Number         4  task.o(.text.Charge_Task)
    __arm_cp.9_4                             0x080011a8   Number         4  task.o(.text.Charge_Task)
    __arm_cp.9_5                             0x080011ac   Number         4  task.o(.text.Charge_Task)
    [Anonymous Symbol]                       0x080011b0   Section        0  task.o(.text.Conditional_Judgment)
    __arm_cp.17_0                            0x08001568   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_1                            0x0800156c   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_2                            0x08001570   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_3                            0x08001574   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_4                            0x08001578   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_5                            0x0800157c   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_6                            0x08001580   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_7                            0x08001584   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_8                            0x08001588   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_9                            0x0800158c   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_10                           0x08001590   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_11                           0x08001594   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_12                           0x08001598   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_13                           0x0800159c   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_14                           0x080015a0   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_15                           0x080015a4   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_16                           0x080015a8   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_17                           0x080015ac   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_18                           0x080015b0   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_19                           0x080015b4   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_20                           0x080015b8   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_21                           0x080015bc   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_22                           0x080015c0   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_23                           0x080015c4   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_24                           0x080015c8   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_25                           0x080015cc   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_27                           0x080015d0   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_28                           0x080015d4   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_29                           0x080015d8   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_30                           0x080015dc   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_31                           0x080015e0   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_32                           0x080015e4   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_33                           0x080015e8   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_34                           0x080015ec   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_35                           0x080015f0   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_36                           0x080015f4   Number         4  task.o(.text.Conditional_Judgment)
    __arm_cp.17_37                           0x080015f8   Number         4  task.o(.text.Conditional_Judgment)
    [Anonymous Symbol]                       0x080015fc   Section        0  task.o(.text.Flashlight_Bright)
    __arm_cp.10_0                            0x08001738   Number         4  task.o(.text.Flashlight_Bright)
    __arm_cp.10_1                            0x0800173c   Number         4  task.o(.text.Flashlight_Bright)
    __arm_cp.10_2                            0x08001740   Number         4  task.o(.text.Flashlight_Bright)
    __arm_cp.10_4                            0x08001744   Number         4  task.o(.text.Flashlight_Bright)
    __arm_cp.10_6                            0x08001748   Number         4  task.o(.text.Flashlight_Bright)
    __arm_cp.10_7                            0x0800174c   Number         4  task.o(.text.Flashlight_Bright)
    __arm_cp.10_8                            0x08001750   Number         4  task.o(.text.Flashlight_Bright)
    __arm_cp.10_9                            0x08001754   Number         4  task.o(.text.Flashlight_Bright)
    __arm_cp.10_13                           0x08001758   Number         4  task.o(.text.Flashlight_Bright)
    __arm_cp.10_14                           0x0800175c   Number         4  task.o(.text.Flashlight_Bright)
    [Anonymous Symbol]                       0x08001760   Section        0  task.o(.text.Flashlight_Detection)
    __arm_cp.12_0                            0x080017ec   Number         4  task.o(.text.Flashlight_Detection)
    __arm_cp.12_1                            0x080017f0   Number         4  task.o(.text.Flashlight_Detection)
    __arm_cp.12_2                            0x080017f4   Number         4  task.o(.text.Flashlight_Detection)
    __arm_cp.12_3                            0x080017f8   Number         4  task.o(.text.Flashlight_Detection)
    __arm_cp.12_4                            0x080017fc   Number         4  task.o(.text.Flashlight_Detection)
    __arm_cp.12_5                            0x08001800   Number         4  task.o(.text.Flashlight_Detection)
    __arm_cp.12_6                            0x08001804   Number         4  task.o(.text.Flashlight_Detection)
    __arm_cp.12_8                            0x08001808   Number         4  task.o(.text.Flashlight_Detection)
    [Anonymous Symbol]                       0x0800180c   Section        0  task.o(.text.Flashlight_Task)
    __arm_cp.11_1                            0x0800188c   Number         4  task.o(.text.Flashlight_Task)
    __arm_cp.11_2                            0x08001890   Number         4  task.o(.text.Flashlight_Task)
    __arm_cp.11_3                            0x08001894   Number         4  task.o(.text.Flashlight_Task)
    __arm_cp.11_4                            0x08001898   Number         4  task.o(.text.Flashlight_Task)
    __arm_cp.11_5                            0x0800189c   Number         4  task.o(.text.Flashlight_Task)
    __arm_cp.11_6                            0x080018a0   Number         4  task.o(.text.Flashlight_Task)
    [Anonymous Symbol]                       0x080018a4   Section        0  hk32f030m_gpio.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x0800192c   Section        0  hk32f030m_gpio.o(.text.GPIO_PinAFConfig)
    [Anonymous Symbol]                       0x0800194c   Section        0  vesc_uasrt.o(.text.Get_Vesc_Pack_Data)
    __arm_cp.1_0                             0x08001980   Number         4  vesc_uasrt.o(.text.Get_Vesc_Pack_Data)
    [Anonymous Symbol]                       0x08001984   Section        0  hk32f030m_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x08001988   Section        0  io_ws2812.o(.text.IO_WS2812_Init)
    __arm_cp.0_0                             0x080019b0   Number         4  io_ws2812.o(.text.IO_WS2812_Init)
    [Anonymous Symbol]                       0x080019b4   Section        0  key.o(.text.KEY1_Scan)
    __arm_cp.1_0                             0x08001a9c   Number         4  key.o(.text.KEY1_Scan)
    __arm_cp.1_1                             0x08001aa0   Number         4  key.o(.text.KEY1_Scan)
    __arm_cp.1_2                             0x08001aa4   Number         4  key.o(.text.KEY1_Scan)
    __arm_cp.1_4                             0x08001aa8   Number         4  key.o(.text.KEY1_Scan)
    __arm_cp.1_5                             0x08001aac   Number         4  key.o(.text.KEY1_Scan)
    __arm_cp.1_6                             0x08001ab0   Number         4  key.o(.text.KEY1_Scan)
    __arm_cp.1_7                             0x08001ab4   Number         4  key.o(.text.KEY1_Scan)
    [Anonymous Symbol]                       0x08001ab8   Section        0  task.o(.text.KEY1_Task)
    __arm_cp.1_0                             0x08001b1c   Number         4  task.o(.text.KEY1_Task)
    __arm_cp.1_1                             0x08001b20   Number         4  task.o(.text.KEY1_Task)
    __arm_cp.1_3                             0x08001b24   Number         4  task.o(.text.KEY1_Task)
    __arm_cp.1_4                             0x08001b28   Number         4  task.o(.text.KEY1_Task)
    __arm_cp.1_5                             0x08001b2c   Number         4  task.o(.text.KEY1_Task)
    [Anonymous Symbol]                       0x08001b30   Section        0  key.o(.text.KEY_Init)
    [Anonymous Symbol]                       0x08001b54   Section        0  led.o(.text.LED_Init)
    [Anonymous Symbol]                       0x08001bb0   Section        0  led_pwm.o(.text.LED_PWM_Init)
    __arm_cp.0_0                             0x08001c2c   Number         4  led_pwm.o(.text.LED_PWM_Init)
    __arm_cp.0_1                             0x08001c30   Number         4  led_pwm.o(.text.LED_PWM_Init)
    __arm_cp.0_2                             0x08001c34   Number         4  led_pwm.o(.text.LED_PWM_Init)
    __arm_cp.0_3                             0x08001c38   Number         4  led_pwm.o(.text.LED_PWM_Init)
    __arm_cp.0_4                             0x08001c3c   Number         4  led_pwm.o(.text.LED_PWM_Init)
    [Anonymous Symbol]                       0x08001c40   Section        0  hk32f030m_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x08001c44   Section        0  hk32f030m_misc.o(.text.NVIC_Init)
    __arm_cp.0_0                             0x08001c88   Number         4  hk32f030m_misc.o(.text.NVIC_Init)
    __arm_cp.0_1                             0x08001c8c   Number         4  hk32f030m_misc.o(.text.NVIC_Init)
    __arm_cp.0_2                             0x08001c90   Number         4  hk32f030m_misc.o(.text.NVIC_Init)
    [Anonymous Symbol]                       0x08001c94   Section        0  hk32f030m_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x08001c98   Section        0  task.o(.text.Power_Display)
    __arm_cp.2_0                             0x08001cdc   Number         4  task.o(.text.Power_Display)
    [Anonymous Symbol]                       0x08001ce0   Section        0  power.o(.text.Power_Init)
    __arm_cp.0_0                             0x08001d20   Number         4  power.o(.text.Power_Init)
    [Anonymous Symbol]                       0x08001d24   Section        0  task.o(.text.Power_Task)
    __arm_cp.8_0                             0x08001d84   Number         4  task.o(.text.Power_Task)
    __arm_cp.8_1                             0x08001d88   Number         4  task.o(.text.Power_Task)
    __arm_cp.8_2                             0x08001d8c   Number         4  task.o(.text.Power_Task)
    __arm_cp.8_3                             0x08001d90   Number         4  task.o(.text.Power_Task)
    __arm_cp.8_4                             0x08001d94   Number         4  task.o(.text.Power_Task)
    __arm_cp.8_5                             0x08001d98   Number         4  task.o(.text.Power_Task)
    __arm_cp.8_6                             0x08001d9c   Number         4  task.o(.text.Power_Task)
    __arm_cp.8_7                             0x08001da0   Number         4  task.o(.text.Power_Task)
    __arm_cp.8_8                             0x08001da4   Number         4  task.o(.text.Power_Task)
    [Anonymous Symbol]                       0x08001da8   Section        0  vesc_uasrt.o(.text.Protocol_Parse)
    __arm_cp.8_0                             0x08001f60   Number         4  vesc_uasrt.o(.text.Protocol_Parse)
    __arm_cp.8_1                             0x08001f64   Number         4  vesc_uasrt.o(.text.Protocol_Parse)
    __arm_cp.8_2                             0x08001f68   Number         4  vesc_uasrt.o(.text.Protocol_Parse)
    __arm_cp.8_3                             0x08001f6c   Number         4  vesc_uasrt.o(.text.Protocol_Parse)
    __arm_cp.8_4                             0x08001f70   Number         4  vesc_uasrt.o(.text.Protocol_Parse)
    __arm_cp.8_5                             0x08001f74   Number         4  vesc_uasrt.o(.text.Protocol_Parse)
    __arm_cp.8_6                             0x08001f78   Number         4  vesc_uasrt.o(.text.Protocol_Parse)
    [Anonymous Symbol]                       0x08001f7c   Section        0  hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd)
    __arm_cp.7_0                             0x08001f94   Number         4  hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd)
    [Anonymous Symbol]                       0x08001f98   Section        0  hk32f030m_rcc.o(.text.RCC_APB1PeriphClockCmd)
    __arm_cp.19_0                            0x08001fb0   Number         4  hk32f030m_rcc.o(.text.RCC_APB1PeriphClockCmd)
    [Anonymous Symbol]                       0x08001fb4   Section        0  hk32f030m_rcc.o(.text.RCC_APB2PeriphClockCmd)
    __arm_cp.18_0                            0x08001fcc   Number         4  hk32f030m_rcc.o(.text.RCC_APB2PeriphClockCmd)
    [Anonymous Symbol]                       0x08001fd0   Section        0  hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd)
    __arm_cp.21_0                            0x08001fe8   Number         4  hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd)
    [Anonymous Symbol]                       0x08001fec   Section        0  hk32f030m_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.17_0                            0x08002094   Number         4  hk32f030m_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.17_1                            0x08002098   Number         4  hk32f030m_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.17_2                            0x0800209c   Number         4  hk32f030m_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.17_3                            0x080020a0   Number         4  hk32f030m_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.17_4                            0x080020a4   Number         4  hk32f030m_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.17_5                            0x080020a8   Number         4  hk32f030m_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.17_7                            0x080020ac   Number         4  hk32f030m_rcc.o(.text.RCC_GetClocksFreq)
    [Anonymous Symbol]                       0x080020b0   Section        0  adc.o(.text.Read_ADC_Value)
    __arm_cp.1_0                             0x08002104   Number         4  adc.o(.text.Read_ADC_Value)
    [Anonymous Symbol]                       0x08002114   Section        0  hk32f030m_it.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x08002118   Section        0  task.o(.text.Sensor_Activation_Diplay)
    __arm_cp.3_0                             0x080021e0   Number         4  task.o(.text.Sensor_Activation_Diplay)
    __arm_cp.3_1                             0x080021e4   Number         4  task.o(.text.Sensor_Activation_Diplay)
    [Anonymous Symbol]                       0x080021e8   Section        0  hk32f030m_it.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x080021ec   Section        0  system_hk32f030m.o(.text.SystemInit)
    __arm_cp.0_0                             0x080022c8   Number         4  system_hk32f030m.o(.text.SystemInit)
    __arm_cp.0_1                             0x080022cc   Number         4  system_hk32f030m.o(.text.SystemInit)
    __arm_cp.0_2                             0x080022d0   Number         4  system_hk32f030m.o(.text.SystemInit)
    __arm_cp.0_3                             0x080022d4   Number         4  system_hk32f030m.o(.text.SystemInit)
    __arm_cp.0_5                             0x080022d8   Number         4  system_hk32f030m.o(.text.SystemInit)
    [Anonymous Symbol]                       0x080022dc   Section        0  hk32f030m_it.o(.text.TIM6_IRQHandler)
    __arm_cp.5_1                             0x08002360   Number         4  hk32f030m_it.o(.text.TIM6_IRQHandler)
    __arm_cp.5_2                             0x08002364   Number         4  hk32f030m_it.o(.text.TIM6_IRQHandler)
    __arm_cp.5_3                             0x08002368   Number         4  hk32f030m_it.o(.text.TIM6_IRQHandler)
    __arm_cp.5_4                             0x0800236c   Number         4  hk32f030m_it.o(.text.TIM6_IRQHandler)
    __arm_cp.5_5                             0x08002370   Number         4  hk32f030m_it.o(.text.TIM6_IRQHandler)
    __arm_cp.5_6                             0x08002374   Number         4  hk32f030m_it.o(.text.TIM6_IRQHandler)
    __arm_cp.5_7                             0x08002378   Number         4  hk32f030m_it.o(.text.TIM6_IRQHandler)
    __arm_cp.5_8                             0x0800237c   Number         4  hk32f030m_it.o(.text.TIM6_IRQHandler)
    __arm_cp.5_9                             0x08002380   Number         4  hk32f030m_it.o(.text.TIM6_IRQHandler)
    __arm_cp.5_10                            0x08002384   Number         4  hk32f030m_it.o(.text.TIM6_IRQHandler)
    __arm_cp.5_11                            0x08002388   Number         4  hk32f030m_it.o(.text.TIM6_IRQHandler)
    __arm_cp.5_12                            0x0800238c   Number         4  hk32f030m_it.o(.text.TIM6_IRQHandler)
    [Anonymous Symbol]                       0x08002390   Section        0  hk32f030m_tim.o(.text.TIM_ClearITPendingBit)
    [Anonymous Symbol]                       0x08002398   Section        0  hk32f030m_tim.o(.text.TIM_Cmd)
    __arm_cp.14_0                            0x080023b0   Number         4  hk32f030m_tim.o(.text.TIM_Cmd)
    [Anonymous Symbol]                       0x080023b4   Section        0  hk32f030m_tim.o(.text.TIM_CtrlPWMOutputs)
    __arm_cp.17_0                            0x080023cc   Number         4  hk32f030m_tim.o(.text.TIM_CtrlPWMOutputs)
    [Anonymous Symbol]                       0x080023d0   Section        0  hk32f030m_tim.o(.text.TIM_GetITStatus)
    [Anonymous Symbol]                       0x080023e4   Section        0  hk32f030m_tim.o(.text.TIM_ITConfig)
    __arm_cp.67_0                            0x080023fc   Number         4  hk32f030m_tim.o(.text.TIM_ITConfig)
    [Anonymous Symbol]                       0x08002400   Section        0  hk32f030m_tim.o(.text.TIM_OC2Init)
    __arm_cp.19_0                            0x0800246c   Number         4  hk32f030m_tim.o(.text.TIM_OC2Init)
    __arm_cp.19_2                            0x08002470   Number         4  hk32f030m_tim.o(.text.TIM_OC2Init)
    __arm_cp.19_3                            0x08002474   Number         4  hk32f030m_tim.o(.text.TIM_OC2Init)
    __arm_cp.19_4                            0x08002478   Number         4  hk32f030m_tim.o(.text.TIM_OC2Init)
    [Anonymous Symbol]                       0x0800247c   Section        0  hk32f030m_tim.o(.text.TIM_SetCompare2)
    [Anonymous Symbol]                       0x08002480   Section        0  hk32f030m_tim.o(.text.TIM_TimeBaseInit)
    __arm_cp.1_0                             0x080024cc   Number         4  hk32f030m_tim.o(.text.TIM_TimeBaseInit)
    [Anonymous Symbol]                       0x080024d0   Section        0  time.o(.text.Time6_Init)
    __arm_cp.0_0                             0x08002518   Number         4  time.o(.text.Time6_Init)
    __arm_cp.0_1                             0x0800251c   Number         4  time.o(.text.Time6_Init)
    [Anonymous Symbol]                       0x08002520   Section        0  hk32f030m_it.o(.text.USART1_IRQHandler)
    __arm_cp.6_1                             0x08002578   Number         4  hk32f030m_it.o(.text.USART1_IRQHandler)
    [Anonymous Symbol]                       0x0800257c   Section        0  usart.o(.text.USART1_Init)
    __arm_cp.0_0                             0x08002614   Number         4  usart.o(.text.USART1_Init)
    __arm_cp.0_2                             0x08002618   Number         4  usart.o(.text.USART1_Init)
    __arm_cp.0_3                             0x0800261c   Number         4  usart.o(.text.USART1_Init)
    [Anonymous Symbol]                       0x08002620   Section        0  usart.o(.text.USART1_Send_Bytes)
    __arm_cp.2_0                             0x0800263c   Number         4  usart.o(.text.USART1_Send_Bytes)
    [Anonymous Symbol]                       0x08002640   Section        0  hk32f030m_usart.o(.text.USART_ClearFlag)
    [Anonymous Symbol]                       0x08002644   Section        0  hk32f030m_usart.o(.text.USART_Cmd)
    [Anonymous Symbol]                       0x08002654   Section        0  hk32f030m_usart.o(.text.USART_ITConfig)
    [Anonymous Symbol]                       0x08002684   Section        0  hk32f030m_usart.o(.text.USART_Init)
    __arm_cp.1_0                             0x08002718   Number         4  hk32f030m_usart.o(.text.USART_Init)
    __arm_cp.1_1                             0x0800271c   Number         4  hk32f030m_usart.o(.text.USART_Init)
    __arm_cp.1_2                             0x08002720   Number         4  hk32f030m_usart.o(.text.USART_Init)
    [Anonymous Symbol]                       0x08002724   Section        0  hk32f030m_usart.o(.text.USART_ReceiveData)
    __arm_cp.21_0                            0x0800272c   Number         4  hk32f030m_usart.o(.text.USART_ReceiveData)
    [Anonymous Symbol]                       0x08002730   Section        0  task.o(.text.Usart_Task)
    __arm_cp.14_1                            0x080027c8   Number         4  task.o(.text.Usart_Task)
    __arm_cp.14_2                            0x080027cc   Number         4  task.o(.text.Usart_Task)
    __arm_cp.14_3                            0x080027d0   Number         4  task.o(.text.Usart_Task)
    __arm_cp.14_4                            0x080027d4   Number         4  task.o(.text.Usart_Task)
    __arm_cp.14_5                            0x080027d8   Number         4  task.o(.text.Usart_Task)
    __arm_cp.14_6                            0x080027dc   Number         4  task.o(.text.Usart_Task)
    [Anonymous Symbol]                       0x080027e0   Section        0  io_ws2812.o(.text.WS2812_0_Code)
    [Anonymous Symbol]                       0x080027f0   Section        0  io_ws2812.o(.text.WS2812_1_Code)
    __arm_cp.2_0                             0x08002808   Number         4  io_ws2812.o(.text.WS2812_1_Code)
    [Anonymous Symbol]                       0x0800280c   Section        0  task.o(.text.WS2812_Boot)
    __arm_cp.4_0                             0x08002860   Number         4  task.o(.text.WS2812_Boot)
    __arm_cp.4_1                             0x08002864   Number         4  task.o(.text.WS2812_Boot)
    [Anonymous Symbol]                       0x08002868   Section        0  task.o(.text.WS2812_Charge)
    __arm_cp.6_0                             0x080028f4   Number         4  task.o(.text.WS2812_Charge)
    __arm_cp.6_1                             0x080028f8   Number         4  task.o(.text.WS2812_Charge)
    [Anonymous Symbol]                       0x080028fc   Section        0  ws2812.o(.text.WS2812_Init)
    [Anonymous Symbol]                       0x08002910   Section        0  ws2812.o(.text.WS2812_Refresh)
    __arm_cp.4_0                             0x08002944   Number         4  ws2812.o(.text.WS2812_Refresh)
    [Anonymous Symbol]                       0x08002948   Section        0  ws2812.o(.text.WS2812_Set_Colour)
    __arm_cp.1_0                             0x080029a0   Number         4  ws2812.o(.text.WS2812_Set_Colour)
    [Anonymous Symbol]                       0x080029a4   Section        0  task.o(.text.WS2812_Task)
    __arm_cp.7_0                             0x08002a4c   Number         4  task.o(.text.WS2812_Task)
    __arm_cp.7_1                             0x08002a50   Number         4  task.o(.text.WS2812_Task)
    __arm_cp.7_2                             0x08002a54   Number         4  task.o(.text.WS2812_Task)
    __arm_cp.7_3                             0x08002a58   Number         4  task.o(.text.WS2812_Task)
    __arm_cp.7_4                             0x08002a5c   Number         4  task.o(.text.WS2812_Task)
    __arm_cp.7_5                             0x08002a60   Number         4  task.o(.text.WS2812_Task)
    __arm_cp.7_6                             0x08002a64   Number         4  task.o(.text.WS2812_Task)
    __arm_cp.7_7                             0x08002a68   Number         4  task.o(.text.WS2812_Task)
    __arm_cp.7_8                             0x08002a6c   Number         4  task.o(.text.WS2812_Task)
    [Anonymous Symbol]                       0x08002a70   Section        0  crc.o(.text.crc16)
    __arm_cp.0_0                             0x08002a98   Number         4  crc.o(.text.crc16)
    [Anonymous Symbol]                       0x08002a9c   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x08002afc   Number         4  main.o(.text.main)
    __arm_cp.0_1                             0x08002b00   Number         4  main.o(.text.main)
    .text_divfast                            0x08002b04   Section      502  aeabi_sdivfast.o(.text_divfast)
    i._dgeq                                  0x08002cfa   Section        0  dcmp.o(i._dgeq)
    i._dgr                                   0x08002d10   Section        0  dcmp.o(i._dgr)
    i._dleq                                  0x08002d26   Section        0  dcmp.o(i._dleq)
    i._dls                                   0x08002d40   Section        0  dcmp.o(i._dls)
    i._fgeq                                  0x08002d56   Section        0  fcmp.o(i._fgeq)
    i._fleq                                  0x08002d6c   Section        0  fcmp.o(i._fleq)
    i._fls                                   0x08002d86   Section        0  fcmp.o(i._fls)
    x$fpl$dgeqf                              0x08002d9c   Section      100  dgef.o(x$fpl$dgeqf)
    x$fpl$dleqf                              0x08002e00   Section      100  dlef.o(x$fpl$dleqf)
    x$fpl$fadd                               0x08002e64   Section      140  faddsub.o(x$fpl$fadd)
    _fadd1                                   0x08002e71   Thumb Code     0  faddsub.o(x$fpl$fadd)
    x$fpl$fgeqf                              0x08002ef0   Section       84  fgef.o(x$fpl$fgeqf)
    x$fpl$fleqf                              0x08002f44   Section       84  flef.o(x$fpl$fleqf)
    x$fpl$fmul                               0x08002f98   Section      176  fmul.o(x$fpl$fmul)
    x$fpl$fsub                               0x08003048   Section      208  faddsub.o(x$fpl$fsub)
    _fsub1                                   0x08003055   Thumb Code     0  faddsub.o(x$fpl$fsub)
    fdiv_tab                                 0x08003118   Data          64  fdiv.o(.constdata)
    .constdata                               0x08003118   Section       64  fdiv.o(.constdata)
    x$fpl$usenofp                            0x08003118   Section        0  usenofp.o(x$fpl$usenofp)
    [Anonymous Symbol]                       0x08003158   Section        0  task.o(.rodata..L__const.Apply_BatteryPowerFlag.battVoltages)
    [Anonymous Symbol]                       0x080033a8   Section        0  task.o(.rodata.str4.4)
    .bss                                     0x20000008   Section       96  libspace.o(.bss)
    ADC_Task.adc1_val_sum_ave                0x20000070   Data           2  task.o(.bss.ADC_Task.adc1_val_sum_ave)
    [Anonymous Symbol]                       0x20000070   Section        0  task.o(.bss.ADC_Task.adc1_val_sum_ave)
    ADC_Task.adc_charge_sum_ave              0x20000072   Data           2  task.o(.bss.ADC_Task.adc_charge_sum_ave)
    [Anonymous Symbol]                       0x20000072   Section        0  task.o(.bss.ADC_Task.adc_charge_sum_ave)
    ADC_Task.adc_step                        0x20000074   Data           1  task.o(.bss.ADC_Task.adc_step)
    [Anonymous Symbol]                       0x20000074   Section        0  task.o(.bss.ADC_Task.adc_step)
    Buzzer_Scan.buzzer_lock                  0x2000007e   Data           1  buzzer.o(.bss.Buzzer_Scan.buzzer_lock)
    [Anonymous Symbol]                       0x2000007e   Section        0  buzzer.o(.bss.Buzzer_Scan.buzzer_lock)
    Buzzer_Task.buzzer_step                  0x2000007f   Data           1  task.o(.bss.Buzzer_Task.buzzer_step)
    [Anonymous Symbol]                       0x2000007f   Section        0  task.o(.bss.Buzzer_Task.buzzer_step)
    Buzzer_Task.gear_position_last           0x20000080   Data           1  task.o(.bss.Buzzer_Task.gear_position_last)
    [Anonymous Symbol]                       0x20000080   Section        0  task.o(.bss.Buzzer_Task.gear_position_last)
    Buzzer_Task.ring_frequency               0x20000081   Data           1  task.o(.bss.Buzzer_Task.ring_frequency)
    [Anonymous Symbol]                       0x20000081   Section        0  task.o(.bss.Buzzer_Task.ring_frequency)
    Buzzer_Task.sound_frequency              0x20000082   Data           2  task.o(.bss.Buzzer_Task.sound_frequency)
    [Anonymous Symbol]                       0x20000082   Section        0  task.o(.bss.Buzzer_Task.sound_frequency)
    Charge_Task.charge_step                  0x2000008d   Data           1  task.o(.bss.Charge_Task.charge_step)
    [Anonymous Symbol]                       0x2000008d   Section        0  task.o(.bss.Charge_Task.charge_step)
    Conditional_Judgment.battery_voltage_last 0x20000098   Data           4  task.o(.bss.Conditional_Judgment.battery_voltage_last)
    [Anonymous Symbol]                       0x20000098   Section        0  task.o(.bss.Conditional_Judgment.battery_voltage_last)
    Flashlight_Bright.flashlight_bright_step 0x2000009c   Data           1  task.o(.bss.Flashlight_Bright.flashlight_bright_step)
    [Anonymous Symbol]                       0x2000009c   Section        0  task.o(.bss.Flashlight_Bright.flashlight_bright_step)
    Flashlight_Detection.gear_position_last  0x2000009d   Data           1  task.o(.bss.Flashlight_Detection.gear_position_last)
    [Anonymous Symbol]                       0x2000009d   Section        0  task.o(.bss.Flashlight_Detection.gear_position_last)
    Flashlight_Task.flashlight_flag_last     0x200000a1   Data           1  task.o(.bss.Flashlight_Task.flashlight_flag_last)
    [Anonymous Symbol]                       0x200000a1   Section        0  task.o(.bss.Flashlight_Task.flashlight_flag_last)
    KEY1_Scan.key1_cnt                       0x200000a6   Data           2  key.o(.bss.KEY1_Scan.key1_cnt)
    [Anonymous Symbol]                       0x200000a6   Section        0  key.o(.bss.KEY1_Scan.key1_cnt)
    KEY1_Scan.key1_cnt_2                     0x200000a8   Data           2  key.o(.bss.KEY1_Scan.key1_cnt_2)
    [Anonymous Symbol]                       0x200000a8   Section        0  key.o(.bss.KEY1_Scan.key1_cnt_2)
    KEY1_Scan.key1_num                       0x200000aa   Data           2  key.o(.bss.KEY1_Scan.key1_num)
    [Anonymous Symbol]                       0x200000aa   Section        0  key.o(.bss.KEY1_Scan.key1_num)
    KEY1_Scan.key1_st                        0x200000ac   Data           1  key.o(.bss.KEY1_Scan.key1_st)
    [Anonymous Symbol]                       0x200000ac   Section        0  key.o(.bss.KEY1_Scan.key1_st)
    Power_Task.power_flag_last               0x200000b3   Data           1  task.o(.bss.Power_Task.power_flag_last)
    [Anonymous Symbol]                       0x200000b3   Section        0  task.o(.bss.Power_Task.power_flag_last)
    Power_Task.power_step                    0x200000b4   Data           1  task.o(.bss.Power_Task.power_step)
    [Anonymous Symbol]                       0x200000b4   Section        0  task.o(.bss.Power_Task.power_step)
    USART1_IRQHandler.count                  0x200000bc   Data           1  hk32f030m_it.o(.bss.USART1_IRQHandler.count)
    [Anonymous Symbol]                       0x200000bc   Section        0  hk32f030m_it.o(.bss.USART1_IRQHandler.count)
    Usart_Task.usart_step                    0x200000be   Data           1  task.o(.bss.Usart_Task.usart_step)
    [Anonymous Symbol]                       0x200000be   Section        0  task.o(.bss.Usart_Task.usart_step)
    WS2812_Charge.cnt                        0x200002b8   Data           1  task.o(.bss.WS2812_Charge.cnt)
    [Anonymous Symbol]                       0x200002b8   Section        0  task.o(.bss.WS2812_Charge.cnt)
    Heap_Mem                                 0x200003f0   Data         512  keil_startup_hk32f030m.o(HEAP)
    HEAP                                     0x200003f0   Section      512  keil_startup_hk32f030m.o(HEAP)
    Stack_Mem                                0x200005f0   Data         512  keil_startup_hk32f030m.o(STACK)
    STACK                                    0x200005f0   Section      512  keil_startup_hk32f030m.o(STACK)
    __initial_sp                             0x200007f0   Data           0  keil_startup_hk32f030m.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000c0   Number         0  keil_startup_hk32f030m.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  keil_startup_hk32f030m.o(RESET)
    __Vectors_End                            0x080000c0   Data           0  keil_startup_hk32f030m.o(RESET)
    __main                                   0x080000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000c9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080000d9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000105   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000121   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0800013d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_1                       0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x08000141   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000145   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000145   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000145   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0800014b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0800014b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x0800014f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0800014f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000157   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000159   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000159   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0800015d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x08000165   Thumb Code     8  keil_startup_hk32f030m.o(.text)
    ADC1_IRQHandler                          0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    EXTI0_IRQHandler                         0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    EXTI11_IRQHandler                        0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    EXTI1_IRQHandler                         0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    EXTI2_IRQHandler                         0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    EXTI3_IRQHandler                         0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    EXTI4_IRQHandler                         0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    EXTI5_IRQHandler                         0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    EXTI6_IRQHandler                         0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    EXTI7_IRQHandler                         0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    FLASH_IRQHandler                         0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    I2C1_IRQHandler                          0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    RCC_IRQHandler                           0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    SPI1_IRQHandler                          0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    TIM1_BRK_IRQHandler                      0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    TIM1_CC_IRQHandler                       0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    TIM1_UP_TRG_COM_IRQHandler               0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    TIM2_IRQHandler                          0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    WWDG_IRQHandler                          0x08000177   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    __user_initial_stackheap                 0x08000179   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    __aeabi_memset4                          0x0800019d   Thumb Code    18  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x0800019d   Thumb Code     0  aeabi_memset4.o(.text)
    __use_two_region_memory                  0x080001af   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080001b1   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080001b3   Thumb Code     2  heapauxi.o(.text)
    __aeabi_d2f                              0x080001b5   Thumb Code     0  d2f.o(.text)
    _d2f                                     0x080001b5   Thumb Code   120  d2f.o(.text)
    __aeabi_dadd                             0x08000529   Thumb Code     0  daddsub.o(.text)
    _dadd                                    0x08000529   Thumb Code    26  daddsub.o(.text)
    __aeabi_dsub                             0x08000543   Thumb Code     0  daddsub.o(.text)
    _dsub                                    0x08000543   Thumb Code    22  daddsub.o(.text)
    __aeabi_drsub                            0x08000559   Thumb Code     0  daddsub.o(.text)
    _drsb                                    0x08000559   Thumb Code    28  daddsub.o(.text)
    __aeabi_d2iz                             0x08000589   Thumb Code     0  dfixi.o(.text)
    _dfix                                    0x08000589   Thumb Code    98  dfixi.o(.text)
    __aeabi_i2d_normalise                    0x080005f5   Thumb Code    66  dflti.o(.text)
    __aeabi_i2d                              0x08000637   Thumb Code    16  dflti.o(.text)
    _dflt                                    0x08000637   Thumb Code     0  dflti.o(.text)
    __aeabi_ui2d                             0x08000647   Thumb Code     6  dflti.o(.text)
    _dfltu                                   0x08000647   Thumb Code     0  dflti.o(.text)
    __aeabi_dmul                             0x0800064d   Thumb Code     0  dmul.o(.text)
    _dmul                                    0x0800064d   Thumb Code   558  dmul.o(.text)
    __aeabi_f2d                              0x08000895   Thumb Code     0  f2d.o(.text)
    _f2d                                     0x08000895   Thumb Code    80  f2d.o(.text)
    __aeabi_fdiv                             0x080008e9   Thumb Code     0  fdiv.o(.text)
    _fdiv                                    0x080008e9   Thumb Code   334  fdiv.o(.text)
    _frdiv                                   0x08000a37   Thumb Code     8  fdiv.o(.text)
    __aeabi_f2iz                             0x08000a49   Thumb Code     0  ffixi.o(.text)
    _ffix                                    0x08000a49   Thumb Code    76  ffixi.o(.text)
    __aeabi_i2f_normalise                    0x08000a95   Thumb Code    72  fflti.o(.text)
    __aeabi_i2f                              0x08000add   Thumb Code    16  fflti.o(.text)
    _fflt                                    0x08000add   Thumb Code     0  fflti.o(.text)
    __aeabi_ui2f                             0x08000aed   Thumb Code     6  fflti.o(.text)
    _ffltu                                   0x08000aed   Thumb Code     0  fflti.o(.text)
    _memset_w                                0x08000af3   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x08000b0d   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x08000b2b   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x08000b2b   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x08000b2f   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x08000b2f   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x08000b2f   Thumb Code     4  rt_memclr.o(.text)
    __fpl_dcmp_InfNaN                        0x08000b35   Thumb Code   154  dcmpin.o(.text)
    __fpl_fcmp_InfNaN                        0x08000bd5   Thumb Code    96  fcmpin.o(.text)
    __user_setup_stackheap                   0x08000c39   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x08000c77   Thumb Code    16  exit.o(.text)
    __fpl_cmpreturn                          0x08000c87   Thumb Code    46  cmpret.o(.text)
    __fpl_dcheck_NaN2                        0x08000cb5   Thumb Code    14  dnan2.o(.text)
    __fpl_fcheck_NaN2                        0x08000cc9   Thumb Code    10  fnan2.o(.text)
    __user_libspace                          0x08000cd9   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000cd9   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x08000cd9   Thumb Code     0  libspace.o(.text)
    __fpl_return_NaN                         0x08000ce1   Thumb Code    94  retnan.o(.text)
    _sys_exit                                0x08000d41   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08000d4d   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000d4d   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000d4f   Thumb Code     0  indicate_semi.o(.text)
    ADC1_Init                                0x08000d51   Thumb Code   152  adc.o(.text.ADC1_Init)
    ADC_ChannelConfig                        0x08000df1   Thumb Code     6  hk32f030m_adc.o(.text.ADC_ChannelConfig)
    ADC_ClearFlag                            0x08000df7   Thumb Code     4  hk32f030m_adc.o(.text.ADC_ClearFlag)
    ADC_Cmd                                  0x08000dfb   Thumb Code    18  hk32f030m_adc.o(.text.ADC_Cmd)
    ADC_DeInit                               0x08000e0d   Thumb Code    32  hk32f030m_adc.o(.text.ADC_DeInit)
    ADC_GetConversionValue                   0x08000e31   Thumb Code     6  hk32f030m_adc.o(.text.ADC_GetConversionValue)
    ADC_GetFlagStatus                        0x08000e37   Thumb Code    24  hk32f030m_adc.o(.text.ADC_GetFlagStatus)
    ADC_Init                                 0x08000e51   Thumb Code    32  hk32f030m_adc.o(.text.ADC_Init)
    ADC_StartOfConversion                    0x08000e75   Thumb Code    10  hk32f030m_adc.o(.text.ADC_StartOfConversion)
    ADC_StopOfConversion                     0x08000e7f   Thumb Code    10  hk32f030m_adc.o(.text.ADC_StopOfConversion)
    ADC_StructInit                           0x08000e89   Thumb Code    14  hk32f030m_adc.o(.text.ADC_StructInit)
    ADC_Task                                 0x08000e99   Thumb Code   192  task.o(.text.ADC_Task)
    Buzzer_Init                              0x08000f91   Thumb Code    40  buzzer.o(.text.Buzzer_Init)
    Buzzer_Ring                              0x08000fb9   Thumb Code     8  buzzer.o(.text.Buzzer_Ring)
    Buzzer_Scan                              0x08000fc1   Thumb Code    44  buzzer.o(.text.Buzzer_Scan)
    Buzzer_Task                              0x08000ff5   Thumb Code   224  task.o(.text.Buzzer_Task)
    Charge_Task                              0x08001109   Thumb Code   144  task.o(.text.Charge_Task)
    Conditional_Judgment                     0x080011b1   Thumb Code   948  task.o(.text.Conditional_Judgment)
    Flashlight_Bright                        0x080015fd   Thumb Code   316  task.o(.text.Flashlight_Bright)
    Flashlight_Detection                     0x08001761   Thumb Code   140  task.o(.text.Flashlight_Detection)
    Flashlight_Task                          0x0800180d   Thumb Code   128  task.o(.text.Flashlight_Task)
    GPIO_Init                                0x080018a5   Thumb Code   136  hk32f030m_gpio.o(.text.GPIO_Init)
    GPIO_PinAFConfig                         0x0800192d   Thumb Code    32  hk32f030m_gpio.o(.text.GPIO_PinAFConfig)
    Get_Vesc_Pack_Data                       0x0800194d   Thumb Code    52  vesc_uasrt.o(.text.Get_Vesc_Pack_Data)
    HardFault_Handler                        0x08001985   Thumb Code     2  hk32f030m_it.o(.text.HardFault_Handler)
    IO_WS2812_Init                           0x08001989   Thumb Code    40  io_ws2812.o(.text.IO_WS2812_Init)
    KEY1_Scan                                0x080019b5   Thumb Code   232  key.o(.text.KEY1_Scan)
    KEY1_Task                                0x08001ab9   Thumb Code   100  task.o(.text.KEY1_Task)
    KEY_Init                                 0x08001b31   Thumb Code    36  key.o(.text.KEY_Init)
    LED_Init                                 0x08001b55   Thumb Code    92  led.o(.text.LED_Init)
    LED_PWM_Init                             0x08001bb1   Thumb Code   124  led_pwm.o(.text.LED_PWM_Init)
    NMI_Handler                              0x08001c41   Thumb Code     2  hk32f030m_it.o(.text.NMI_Handler)
    NVIC_Init                                0x08001c45   Thumb Code    68  hk32f030m_misc.o(.text.NVIC_Init)
    PendSV_Handler                           0x08001c95   Thumb Code     2  hk32f030m_it.o(.text.PendSV_Handler)
    Power_Display                            0x08001c99   Thumb Code    68  task.o(.text.Power_Display)
    Power_Init                               0x08001ce1   Thumb Code    64  power.o(.text.Power_Init)
    Power_Task                               0x08001d25   Thumb Code    96  task.o(.text.Power_Task)
    Protocol_Parse                           0x08001da9   Thumb Code   440  vesc_uasrt.o(.text.Protocol_Parse)
    RCC_AHBPeriphClockCmd                    0x08001f7d   Thumb Code    24  hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd)
    RCC_APB1PeriphClockCmd                   0x08001f99   Thumb Code    24  hk32f030m_rcc.o(.text.RCC_APB1PeriphClockCmd)
    RCC_APB2PeriphClockCmd                   0x08001fb5   Thumb Code    24  hk32f030m_rcc.o(.text.RCC_APB2PeriphClockCmd)
    RCC_APB2PeriphResetCmd                   0x08001fd1   Thumb Code    24  hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd)
    RCC_GetClocksFreq                        0x08001fed   Thumb Code   168  hk32f030m_rcc.o(.text.RCC_GetClocksFreq)
    Read_ADC_Value                           0x080020b1   Thumb Code    84  adc.o(.text.Read_ADC_Value)
    SVC_Handler                              0x08002115   Thumb Code     2  hk32f030m_it.o(.text.SVC_Handler)
    Sensor_Activation_Diplay                 0x08002119   Thumb Code   200  task.o(.text.Sensor_Activation_Diplay)
    SysTick_Handler                          0x080021e9   Thumb Code     2  hk32f030m_it.o(.text.SysTick_Handler)
    SystemInit                               0x080021ed   Thumb Code   220  system_hk32f030m.o(.text.SystemInit)
    TIM6_IRQHandler                          0x080022dd   Thumb Code   132  hk32f030m_it.o(.text.TIM6_IRQHandler)
    TIM_ClearITPendingBit                    0x08002391   Thumb Code     8  hk32f030m_tim.o(.text.TIM_ClearITPendingBit)
    TIM_Cmd                                  0x08002399   Thumb Code    24  hk32f030m_tim.o(.text.TIM_Cmd)
    TIM_CtrlPWMOutputs                       0x080023b5   Thumb Code    24  hk32f030m_tim.o(.text.TIM_CtrlPWMOutputs)
    TIM_GetITStatus                          0x080023d1   Thumb Code    20  hk32f030m_tim.o(.text.TIM_GetITStatus)
    TIM_ITConfig                             0x080023e5   Thumb Code    24  hk32f030m_tim.o(.text.TIM_ITConfig)
    TIM_OC2Init                              0x08002401   Thumb Code   108  hk32f030m_tim.o(.text.TIM_OC2Init)
    TIM_SetCompare2                          0x0800247d   Thumb Code     4  hk32f030m_tim.o(.text.TIM_SetCompare2)
    TIM_TimeBaseInit                         0x08002481   Thumb Code    76  hk32f030m_tim.o(.text.TIM_TimeBaseInit)
    Time6_Init                               0x080024d1   Thumb Code    72  time.o(.text.Time6_Init)
    USART1_IRQHandler                        0x08002521   Thumb Code    88  hk32f030m_it.o(.text.USART1_IRQHandler)
    USART1_Init                              0x0800257d   Thumb Code   152  usart.o(.text.USART1_Init)
    USART1_Send_Bytes                        0x08002621   Thumb Code    28  usart.o(.text.USART1_Send_Bytes)
    USART_ClearFlag                          0x08002641   Thumb Code     4  hk32f030m_usart.o(.text.USART_ClearFlag)
    USART_Cmd                                0x08002645   Thumb Code    16  hk32f030m_usart.o(.text.USART_Cmd)
    USART_ITConfig                           0x08002655   Thumb Code    46  hk32f030m_usart.o(.text.USART_ITConfig)
    USART_Init                               0x08002685   Thumb Code   148  hk32f030m_usart.o(.text.USART_Init)
    USART_ReceiveData                        0x08002725   Thumb Code     8  hk32f030m_usart.o(.text.USART_ReceiveData)
    Usart_Task                               0x08002731   Thumb Code   152  task.o(.text.Usart_Task)
    WS2812_0_Code                            0x080027e1   Thumb Code    16  io_ws2812.o(.text.WS2812_0_Code)
    WS2812_1_Code                            0x080027f1   Thumb Code    24  io_ws2812.o(.text.WS2812_1_Code)
    WS2812_Boot                              0x0800280d   Thumb Code    84  task.o(.text.WS2812_Boot)
    WS2812_Charge                            0x08002869   Thumb Code   140  task.o(.text.WS2812_Charge)
    WS2812_Init                              0x080028fd   Thumb Code    20  ws2812.o(.text.WS2812_Init)
    WS2812_Refresh                           0x08002911   Thumb Code    52  ws2812.o(.text.WS2812_Refresh)
    WS2812_Set_Colour                        0x08002949   Thumb Code    88  ws2812.o(.text.WS2812_Set_Colour)
    WS2812_Task                              0x080029a5   Thumb Code   168  task.o(.text.WS2812_Task)
    crc16                                    0x08002a71   Thumb Code    40  crc.o(.text.crc16)
    main                                     0x08002a9d   Thumb Code    96  main.o(.text.main)
    __aeabi_uidiv                            0x08002b05   Thumb Code    68  aeabi_sdivfast.o(.text_divfast)
    __aeabi_idiv                             0x08002b49   Thumb Code   434  aeabi_sdivfast.o(.text_divfast)
    __aeabi_dcmpge                           0x08002cfb   Thumb Code     0  dcmp.o(i._dgeq)
    _dgeq                                    0x08002cfb   Thumb Code    22  dcmp.o(i._dgeq)
    __aeabi_dcmpgt                           0x08002d11   Thumb Code     0  dcmp.o(i._dgr)
    _dgr                                     0x08002d11   Thumb Code    22  dcmp.o(i._dgr)
    __aeabi_dcmple                           0x08002d27   Thumb Code     0  dcmp.o(i._dleq)
    _dleq                                    0x08002d27   Thumb Code    26  dcmp.o(i._dleq)
    __aeabi_dcmplt                           0x08002d41   Thumb Code     0  dcmp.o(i._dls)
    _dls                                     0x08002d41   Thumb Code    22  dcmp.o(i._dls)
    __aeabi_fcmpge                           0x08002d57   Thumb Code     0  fcmp.o(i._fgeq)
    _fgeq                                    0x08002d57   Thumb Code    22  fcmp.o(i._fgeq)
    __aeabi_fcmple                           0x08002d6d   Thumb Code     0  fcmp.o(i._fleq)
    _fleq                                    0x08002d6d   Thumb Code    26  fcmp.o(i._fleq)
    __aeabi_fcmplt                           0x08002d87   Thumb Code     0  fcmp.o(i._fls)
    _fls                                     0x08002d87   Thumb Code    22  fcmp.o(i._fls)
    _dcmpge                                  0x08002d9d   Thumb Code    94  dgef.o(x$fpl$dgeqf)
    __aeabi_cdcmple                          0x08002e01   Thumb Code     0  dlef.o(x$fpl$dleqf)
    _dcmple                                  0x08002e01   Thumb Code    94  dlef.o(x$fpl$dleqf)
    __aeabi_fadd                             0x08002e65   Thumb Code     0  faddsub.o(x$fpl$fadd)
    _fadd                                    0x08002e65   Thumb Code   134  faddsub.o(x$fpl$fadd)
    _fcmpge                                  0x08002ef1   Thumb Code    78  fgef.o(x$fpl$fgeqf)
    __aeabi_cfcmple                          0x08002f45   Thumb Code     0  flef.o(x$fpl$fleqf)
    _fcmple                                  0x08002f45   Thumb Code    78  flef.o(x$fpl$fleqf)
    __aeabi_fmul                             0x08002f99   Thumb Code     0  fmul.o(x$fpl$fmul)
    _fmul                                    0x08002f99   Thumb Code   172  fmul.o(x$fpl$fmul)
    __aeabi_fsub                             0x08003049   Thumb Code     0  faddsub.o(x$fpl$fsub)
    _fsub                                    0x08003049   Thumb Code   204  faddsub.o(x$fpl$fsub)
    __I$use$fp                               0x08003118   Number         0  usenofp.o(x$fpl$usenofp)
    AHBPrescTable                            0x08003180   Data          32  hk32f030m_rcc.o(.rodata.AHBPrescTable)
    APBPrescTable                            0x080031a0   Data           8  hk32f030m_rcc.o(.rodata.APBPrescTable)
    crc16_tab                                0x080031a8   Data         512  crc.o(.rodata.crc16_tab)
    Region$$Table$$Base                      0x080033b4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x080033d4   Number         0  anon$$obj.o(Region$$Table)
    V_I                                      0x20000000   Data           1  flag_bit.o(.data.V_I)
    brightness                               0x20000001   Data           1  task.o(.data.brightness)
    __libspace_start                         0x20000008   Data          96  libspace.o(.bss)
    ADC1_Val                                 0x20000068   Data           4  flag_bit.o(.bss.ADC1_Val)
    __temporary_stack_top$libspace           0x20000068   Data           0  libspace.o(.bss)
    ADC2_Val                                 0x2000006c   Data           4  flag_bit.o(.bss.ADC2_Val)
    ADC_Time                                 0x20000076   Data           2  flag_bit.o(.bss.ADC_Time)
    Brightness_Flag                          0x20000078   Data           1  flag_bit.o(.bss.Brightness_Flag)
    Buzzer_Counter                           0x2000007a   Data           2  buzzer.o(.bss.Buzzer_Counter)
    Buzzer_Flag                              0x2000007c   Data           1  flag_bit.o(.bss.Buzzer_Flag)
    Buzzer_Frequency                         0x2000007d   Data           1  flag_bit.o(.bss.Buzzer_Frequency)
    Buzzer_Time                              0x20000084   Data           2  flag_bit.o(.bss.Buzzer_Time)
    Charge_Current                           0x20000088   Data           4  flag_bit.o(.bss.Charge_Current)
    Charge_Flag                              0x2000008c   Data           1  flag_bit.o(.bss.Charge_Flag)
    Charge_Time                              0x2000008e   Data           2  flag_bit.o(.bss.Charge_Time)
    Charge_Voltage                           0x20000090   Data           4  flag_bit.o(.bss.Charge_Voltage)
    Charger_Detection_1ms                    0x20000094   Data           2  flag_bit.o(.bss.Charger_Detection_1ms)
    Flashlight_Detection_Time                0x2000009e   Data           2  flag_bit.o(.bss.Flashlight_Detection_Time)
    Flashlight_Flag                          0x200000a0   Data           1  flag_bit.o(.bss.Flashlight_Flag)
    Flashlight_Time                          0x200000a2   Data           2  flag_bit.o(.bss.Flashlight_Time)
    Footpad_Activation_Flag                  0x200000a4   Data           1  flag_bit.o(.bss.Footpad_Activation_Flag)
    Gear_Position                            0x200000a5   Data           1  flag_bit.o(.bss.Gear_Position)
    KEY1_State                               0x200000ad   Data           1  key.o(.bss.KEY1_State)
    LED_Counter                              0x200000ae   Data           2  led.o(.bss.LED_Counter)
    Lightbar_Mode_Flag                       0x200000b0   Data           1  flag_bit.o(.bss.Lightbar_Mode_Flag)
    Power_Display_Flag                       0x200000b1   Data           1  flag_bit.o(.bss.Power_Display_Flag)
    Power_Flag                               0x200000b2   Data           1  flag_bit.o(.bss.Power_Flag)
    Power_Time                               0x200000b6   Data           2  flag_bit.o(.bss.Power_Time)
    Shutdown_Cnt                             0x200000b8   Data           1  flag_bit.o(.bss.Shutdown_Cnt)
    Shutdown_Time_M                          0x200000b9   Data           1  flag_bit.o(.bss.Shutdown_Time_M)
    Shutdown_Time_S                          0x200000ba   Data           2  flag_bit.o(.bss.Shutdown_Time_S)
    Usart_Flag                               0x200000bd   Data           1  flag_bit.o(.bss.Usart_Flag)
    Usart_Time                               0x200000c0   Data           2  flag_bit.o(.bss.Usart_Time)
    VESC_Boot_Time                           0x200000c2   Data           2  flag_bit.o(.bss.VESC_Boot_Time)
    VESC_RX_Buff                             0x200000c4   Data         256  vesc_uasrt.o(.bss.VESC_RX_Buff)
    VESC_RX_Flag                             0x200001c4   Data           1  vesc_uasrt.o(.bss.VESC_RX_Flag)
    WS2812_Buff                              0x200001c8   Data         240  ws2812.o(.bss.WS2812_Buff)
    WS2812_Counter                           0x200002ba   Data           2  ws2812.o(.bss.WS2812_Counter)
    WS2812_Measure                           0x200002bc   Data           1  flag_bit.o(.bss.WS2812_Measure)
    data                                     0x200002c0   Data          44  vesc_uasrt.o(.bss.data)
    flashlight_flag_last_2                   0x200002ec   Data           1  task.o(.bss.flashlight_flag_last_2)
    protocol_buff                            0x200002ed   Data         256  vesc_uasrt.o(.bss.protocol_buff)
    val                                      0x200003ed   Data           1  task.o(.bss.val)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000c1

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x000033e0, Max: 0x00004000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x000033d4, Max: 0x00004000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000c0   Data   RO            3    RESET               keil_startup_hk32f030m.o
    0x080000c0   0x080000c0   0x00000008   Code   RO         1014  * !!!main             c_p.l(__main.o)
    0x080000c8   0x080000c8   0x0000003c   Code   RO         1269    !!!scatter          c_p.l(__scatter.o)
    0x08000104   0x08000104   0x0000001a   Code   RO         1271    !!handler_copy      c_p.l(__scatter_copy.o)
    0x0800011e   0x0800011e   0x00000002   PAD
    0x08000120   0x08000120   0x0000001c   Code   RO         1273    !!handler_zi        c_p.l(__scatter_zi.o)
    0x0800013c   0x0800013c   0x00000002   Code   RO         1122    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1142    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1144    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1146    .ARM.Collect$$libinit$$00000006  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1149    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1151    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1153    .ARM.Collect$$libinit$$00000010  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1156    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1158    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1160    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1162    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1164    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1166    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1168    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1170    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1172    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1174    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1176    .ARM.Collect$$libinit$$00000027  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1180    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1182    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1184    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1186    .ARM.Collect$$libinit$$00000034  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000002   Code   RO         1187    .ARM.Collect$$libinit$$00000035  c_p.l(libinit2.o)
    0x08000140   0x08000140   0x00000002   Code   RO         1224    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x08000142   0x08000142   0x00000000   Code   RO         1252    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000000   Code   RO         1254    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000000   Code   RO         1257    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000000   Code   RO         1260    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000000   Code   RO         1262    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000000   Code   RO         1265    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000002   Code   RO         1266    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x08000144   0x08000144   0x00000000   Code   RO         1067    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x08000144   0x08000144   0x00000000   Code   RO         1088    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x08000144   0x08000144   0x00000006   Code   RO         1100    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x0800014a   0x0800014a   0x00000000   Code   RO         1090    .ARM.Collect$$rtentry$$00000009  c_p.l(__rtentry2.o)
    0x0800014a   0x0800014a   0x00000004   Code   RO         1091    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x0800014e   0x0800014e   0x00000000   Code   RO         1093    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x0800014e   0x0800014e   0x00000008   Code   RO         1094    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x08000156   0x08000156   0x00000002   Code   RO         1133    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x08000158   0x08000158   0x00000000   Code   RO         1195    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x08000158   0x08000158   0x00000004   Code   RO         1196    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x0800015c   0x0800015c   0x00000006   Code   RO         1197    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x08000162   0x08000162   0x00000002   PAD
    0x08000164   0x08000164   0x00000038   Code   RO            4    .text               keil_startup_hk32f030m.o
    0x0800019c   0x0800019c   0x00000012   Code   RO         1002    .text               c_p.l(aeabi_memset4.o)
    0x080001ae   0x080001ae   0x00000006   Code   RO         1012    .text               c_p.l(heapauxi.o)
    0x080001b4   0x080001b4   0x0000007c   Code   RO         1016    .text               fz_ps.l(d2f.o)
    0x08000230   0x08000230   0x00000358   Code   RO         1018    .text               fz_ps.l(daddsub.o)
    0x08000588   0x08000588   0x0000006c   Code   RO         1032    .text               fz_ps.l(dfixi.o)
    0x080005f4   0x080005f4   0x00000058   Code   RO         1034    .text               fz_ps.l(dflti.o)
    0x0800064c   0x0800064c   0x00000248   Code   RO         1036    .text               fz_ps.l(dmul.o)
    0x08000894   0x08000894   0x00000054   Code   RO         1038    .text               fz_ps.l(f2d.o)
    0x080008e8   0x080008e8   0x00000160   Code   RO         1058    .text               fz_ps.l(fdiv.o)
    0x08000a48   0x08000a48   0x0000004c   Code   RO         1061    .text               fz_ps.l(ffixi.o)
    0x08000a94   0x08000a94   0x0000005e   Code   RO         1063    .text               fz_ps.l(fflti.o)
    0x08000af2   0x08000af2   0x00000040   Code   RO         1072    .text               c_p.l(rt_memclr.o)
    0x08000b32   0x08000b32   0x00000002   PAD
    0x08000b34   0x08000b34   0x000000a0   Code   RO         1104    .text               fz_ps.l(dcmpin.o)
    0x08000bd4   0x08000bd4   0x00000064   Code   RO         1106    .text               fz_ps.l(fcmpin.o)
    0x08000c38   0x08000c38   0x0000003e   Code   RO         1108    .text               c_p.l(sys_stackheap_outer.o)
    0x08000c76   0x08000c76   0x00000010   Code   RO         1111    .text               c_p.l(exit.o)
    0x08000c86   0x08000c86   0x0000002e   Code   RO         1123    .text               fz_ps.l(cmpret.o)
    0x08000cb4   0x08000cb4   0x00000014   Code   RO         1125    .text               fz_ps.l(dnan2.o)
    0x08000cc8   0x08000cc8   0x00000010   Code   RO         1127    .text               fz_ps.l(fnan2.o)
    0x08000cd8   0x08000cd8   0x00000008   Code   RO         1129    .text               c_p.l(libspace.o)
    0x08000ce0   0x08000ce0   0x0000005e   Code   RO         1188    .text               fz_ps.l(retnan.o)
    0x08000d3e   0x08000d3e   0x00000002   PAD
    0x08000d40   0x08000d40   0x0000000c   Code   RO         1190    .text               c_p.l(sys_exit.o)
    0x08000d4c   0x08000d4c   0x00000002   Code   RO         1213    .text               c_p.l(use_no_semi.o)
    0x08000d4e   0x08000d4e   0x00000000   Code   RO         1215    .text               c_p.l(indicate_semi.o)
    0x08000d4e   0x08000d4e   0x00000002   PAD
    0x08000d50   0x08000d50   0x000000a0   Code   RO          335    .text.ADC1_Init     adc.o
    0x08000df0   0x08000df0   0x00000006   Code   RO          386    .text.ADC_ChannelConfig  hk32f030m_adc.o
    0x08000df6   0x08000df6   0x00000004   Code   RO          406    .text.ADC_ClearFlag  hk32f030m_adc.o
    0x08000dfa   0x08000dfa   0x00000012   Code   RO          366    .text.ADC_Cmd       hk32f030m_adc.o
    0x08000e0c   0x08000e0c   0x00000024   Code   RO          360    .text.ADC_DeInit    hk32f030m_adc.o
    0x08000e30   0x08000e30   0x00000006   Code   RO          400    .text.ADC_GetConversionValue  hk32f030m_adc.o
    0x08000e36   0x08000e36   0x00000018   Code   RO          404    .text.ADC_GetFlagStatus  hk32f030m_adc.o
    0x08000e4e   0x08000e4e   0x00000002   PAD
    0x08000e50   0x08000e50   0x00000024   Code   RO          362    .text.ADC_Init      hk32f030m_adc.o
    0x08000e74   0x08000e74   0x0000000a   Code   RO          398    .text.ADC_StartOfConversion  hk32f030m_adc.o
    0x08000e7e   0x08000e7e   0x0000000a   Code   RO          396    .text.ADC_StopOfConversion  hk32f030m_adc.o
    0x08000e88   0x08000e88   0x0000000e   Code   RO          364    .text.ADC_StructInit  hk32f030m_adc.o
    0x08000e96   0x08000e96   0x00000002   PAD
    0x08000e98   0x08000e98   0x000000f8   Code   RO          176    .text.ADC_Task      task.o
    0x08000f90   0x08000f90   0x00000028   Code   RO          306    .text.Buzzer_Init   buzzer.o
    0x08000fb8   0x08000fb8   0x00000008   Code   RO          310    .text.Buzzer_Ring   buzzer.o
    0x08000fc0   0x08000fc0   0x00000034   Code   RO          308    .text.Buzzer_Scan   buzzer.o
    0x08000ff4   0x08000ff4   0x00000114   Code   RO          172    .text.Buzzer_Task   task.o
    0x08001108   0x08001108   0x000000a8   Code   RO          164    .text.Charge_Task   task.o
    0x080011b0   0x080011b0   0x0000044c   Code   RO          180    .text.Conditional_Judgment  task.o
    0x080015fc   0x080015fc   0x00000164   Code   RO          166    .text.Flashlight_Bright  task.o
    0x08001760   0x08001760   0x000000ac   Code   RO          170    .text.Flashlight_Detection  task.o
    0x0800180c   0x0800180c   0x00000098   Code   RO          168    .text.Flashlight_Task  task.o
    0x080018a4   0x080018a4   0x00000088   Code   RO          428    .text.GPIO_Init     hk32f030m_gpio.o
    0x0800192c   0x0800192c   0x00000020   Code   RO          452    .text.GPIO_PinAFConfig  hk32f030m_gpio.o
    0x0800194c   0x0800194c   0x00000038   Code   RO           87    .text.Get_Vesc_Pack_Data  vesc_uasrt.o
    0x08001984   0x08001984   0x00000002   Code   RO           22    .text.HardFault_Handler  hk32f030m_it.o
    0x08001986   0x08001986   0x00000002   PAD
    0x08001988   0x08001988   0x0000002c   Code   RO          347    .text.IO_WS2812_Init  io_ws2812.o
    0x080019b4   0x080019b4   0x00000104   Code   RO          292    .text.KEY1_Scan     key.o
    0x08001ab8   0x08001ab8   0x00000078   Code   RO          148    .text.KEY1_Task     task.o
    0x08001b30   0x08001b30   0x00000024   Code   RO          290    .text.KEY_Init      key.o
    0x08001b54   0x08001b54   0x0000005c   Code   RO          245    .text.LED_Init      led.o
    0x08001bb0   0x08001bb0   0x00000090   Code   RO          282    .text.LED_PWM_Init  led_pwm.o
    0x08001c40   0x08001c40   0x00000002   Code   RO           20    .text.NMI_Handler   hk32f030m_it.o
    0x08001c42   0x08001c42   0x00000002   PAD
    0x08001c44   0x08001c44   0x00000050   Code   RO          491    .text.NVIC_Init     hk32f030m_misc.o
    0x08001c94   0x08001c94   0x00000002   Code   RO           26    .text.PendSV_Handler  hk32f030m_it.o
    0x08001c96   0x08001c96   0x00000002   PAD
    0x08001c98   0x08001c98   0x00000048   Code   RO          150    .text.Power_Display  task.o
    0x08001ce0   0x08001ce0   0x00000044   Code   RO          274    .text.Power_Init    power.o
    0x08001d24   0x08001d24   0x00000084   Code   RO          162    .text.Power_Task    task.o
    0x08001da8   0x08001da8   0x000001d4   Code   RO          101    .text.Protocol_Parse  vesc_uasrt.o
    0x08001f7c   0x08001f7c   0x0000001c   Code   RO          519    .text.RCC_AHBPeriphClockCmd  hk32f030m_rcc.o
    0x08001f98   0x08001f98   0x0000001c   Code   RO          543    .text.RCC_APB1PeriphClockCmd  hk32f030m_rcc.o
    0x08001fb4   0x08001fb4   0x0000001c   Code   RO          541    .text.RCC_APB2PeriphClockCmd  hk32f030m_rcc.o
    0x08001fd0   0x08001fd0   0x0000001c   Code   RO          547    .text.RCC_APB2PeriphResetCmd  hk32f030m_rcc.o
    0x08001fec   0x08001fec   0x000000c4   Code   RO          539    .text.RCC_GetClocksFreq  hk32f030m_rcc.o
    0x080020b0   0x080020b0   0x00000064   Code   RO          337    .text.Read_ADC_Value  adc.o
    0x08002114   0x08002114   0x00000002   Code   RO           24    .text.SVC_Handler   hk32f030m_it.o
    0x08002116   0x08002116   0x00000002   PAD
    0x08002118   0x08002118   0x000000d0   Code   RO          152    .text.Sensor_Activation_Diplay  task.o
    0x080021e8   0x080021e8   0x00000002   Code   RO           28    .text.SysTick_Handler  hk32f030m_it.o
    0x080021ea   0x080021ea   0x00000002   PAD
    0x080021ec   0x080021ec   0x000000f0   Code   RO           42    .text.SystemInit    system_hk32f030m.o
    0x080022dc   0x080022dc   0x000000b4   Code   RO           30    .text.TIM6_IRQHandler  hk32f030m_it.o
    0x08002390   0x08002390   0x00000008   Code   RO          795    .text.TIM_ClearITPendingBit  hk32f030m_tim.o
    0x08002398   0x08002398   0x0000001c   Code   RO          679    .text.TIM_Cmd       hk32f030m_tim.o
    0x080023b4   0x080023b4   0x0000001c   Code   RO          685    .text.TIM_CtrlPWMOutputs  hk32f030m_tim.o
    0x080023d0   0x080023d0   0x00000014   Code   RO          793    .text.TIM_GetITStatus  hk32f030m_tim.o
    0x080023e4   0x080023e4   0x0000001c   Code   RO          785    .text.TIM_ITConfig  hk32f030m_tim.o
    0x08002400   0x08002400   0x0000007c   Code   RO          689    .text.TIM_OC2Init   hk32f030m_tim.o
    0x0800247c   0x0800247c   0x00000004   Code   RO          701    .text.TIM_SetCompare2  hk32f030m_tim.o
    0x08002480   0x08002480   0x00000050   Code   RO          653    .text.TIM_TimeBaseInit  hk32f030m_tim.o
    0x080024d0   0x080024d0   0x00000050   Code   RO          254    .text.Time6_Init    time.o
    0x08002520   0x08002520   0x0000005c   Code   RO           32    .text.USART1_IRQHandler  hk32f030m_it.o
    0x0800257c   0x0800257c   0x000000a4   Code   RO          321    .text.USART1_Init   usart.o
    0x08002620   0x08002620   0x00000020   Code   RO          325    .text.USART1_Send_Bytes  usart.o
    0x08002640   0x08002640   0x00000004   Code   RO          917    .text.USART_ClearFlag  hk32f030m_usart.o
    0x08002644   0x08002644   0x00000010   Code   RO          839    .text.USART_Cmd     hk32f030m_usart.o
    0x08002654   0x08002654   0x0000002e   Code   RO          909    .text.USART_ITConfig  hk32f030m_usart.o
    0x08002682   0x08002682   0x00000002   PAD
    0x08002684   0x08002684   0x000000a0   Code   RO          831    .text.USART_Init    hk32f030m_usart.o
    0x08002724   0x08002724   0x0000000c   Code   RO          871    .text.USART_ReceiveData  hk32f030m_usart.o
    0x08002730   0x08002730   0x000000b0   Code   RO          174    .text.Usart_Task    task.o
    0x080027e0   0x080027e0   0x00000010   Code   RO          349    .text.WS2812_0_Code  io_ws2812.o
    0x080027f0   0x080027f0   0x0000001c   Code   RO          351    .text.WS2812_1_Code  io_ws2812.o
    0x0800280c   0x0800280c   0x0000005c   Code   RO          154    .text.WS2812_Boot   task.o
    0x08002868   0x08002868   0x00000094   Code   RO          158    .text.WS2812_Charge  task.o
    0x080028fc   0x080028fc   0x00000014   Code   RO           55    .text.WS2812_Init   ws2812.o
    0x08002910   0x08002910   0x00000038   Code   RO           63    .text.WS2812_Refresh  ws2812.o
    0x08002948   0x08002948   0x0000005c   Code   RO           57    .text.WS2812_Set_Colour  ws2812.o
    0x080029a4   0x080029a4   0x000000cc   Code   RO          160    .text.WS2812_Task   task.o
    0x08002a70   0x08002a70   0x0000002c   Code   RO           75    .text.crc16         crc.o
    0x08002a9c   0x08002a9c   0x00000068   Code   RO           11    .text.main          main.o
    0x08002b04   0x08002b04   0x000001f6   Code   RO         1005    .text_divfast       c_p.l(aeabi_sdivfast.o)
    0x08002cfa   0x08002cfa   0x00000016   Code   RO         1021    i._dgeq             fz_ps.l(dcmp.o)
    0x08002d10   0x08002d10   0x00000016   Code   RO         1022    i._dgr              fz_ps.l(dcmp.o)
    0x08002d26   0x08002d26   0x0000001a   Code   RO         1023    i._dleq             fz_ps.l(dcmp.o)
    0x08002d40   0x08002d40   0x00000016   Code   RO         1024    i._dls              fz_ps.l(dcmp.o)
    0x08002d56   0x08002d56   0x00000016   Code   RO         1047    i._fgeq             fz_ps.l(fcmp.o)
    0x08002d6c   0x08002d6c   0x0000001a   Code   RO         1049    i._fleq             fz_ps.l(fcmp.o)
    0x08002d86   0x08002d86   0x00000016   Code   RO         1050    i._fls              fz_ps.l(fcmp.o)
    0x08002d9c   0x08002d9c   0x00000064   Code   RO         1076    x$fpl$dgeqf         fz_ps.l(dgef.o)
    0x08002e00   0x08002e00   0x00000064   Code   RO         1078    x$fpl$dleqf         fz_ps.l(dlef.o)
    0x08002e64   0x08002e64   0x0000008c   Code   RO         1040    x$fpl$fadd          fz_ps.l(faddsub.o)
    0x08002ef0   0x08002ef0   0x00000054   Code   RO         1082    x$fpl$fgeqf         fz_ps.l(fgef.o)
    0x08002f44   0x08002f44   0x00000054   Code   RO         1084    x$fpl$fleqf         fz_ps.l(flef.o)
    0x08002f98   0x08002f98   0x000000b0   Code   RO         1065    x$fpl$fmul          fz_ps.l(fmul.o)
    0x08003048   0x08003048   0x000000d0   Code   RO         1042    x$fpl$fsub          fz_ps.l(faddsub.o)
    0x08003118   0x08003118   0x00000000   Code   RO         1086    x$fpl$usenofp       fz_ps.l(usenofp.o)
    0x08003118   0x08003118   0x00000040   Data   RO         1059    .constdata          fz_ps.l(fdiv.o)
    0x08003158   0x08003158   0x00000028   Data   RO          200    .rodata..L__const.Apply_BatteryPowerFlag.battVoltages  task.o
    0x08003180   0x08003180   0x00000020   Data   RO          559    .rodata.AHBPrescTable  hk32f030m_rcc.o
    0x080031a0   0x080031a0   0x00000008   Data   RO          560    .rodata.APBPrescTable  hk32f030m_rcc.o
    0x080031a8   0x080031a8   0x00000200   Data   RO           77    .rodata.crc16_tab   crc.o
    0x080033a8   0x080033a8   0x0000000c   Data   RO          202    .rodata.str4.4      task.o
    0x080033b4   0x080033b4   0x00000020   Data   RO         1268    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x080033d8, Size: 0x000007f0, Max: 0x00000800, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x080033d8   0x00000001   Data   RW          237    .data.V_I           flag_bit.o
    0x20000001   0x080033d9   0x00000001   Data   RW          182    .data.brightness    task.o
    0x20000002   0x080033da   0x00000006   PAD
    0x20000008        -       0x00000060   Zero   RW         1130    .bss                c_p.l(libspace.o)
    0x20000068        -       0x00000004   Zero   RW          229    .bss.ADC1_Val       flag_bit.o
    0x2000006c        -       0x00000004   Zero   RW          230    .bss.ADC2_Val       flag_bit.o
    0x20000070        -       0x00000002   Zero   RW          199    .bss.ADC_Task.adc1_val_sum_ave  task.o
    0x20000072        -       0x00000002   Zero   RW          198    .bss.ADC_Task.adc_charge_sum_ave  task.o
    0x20000074        -       0x00000001   Zero   RW          197    .bss.ADC_Task.adc_step  task.o
    0x20000075   0x080033da   0x00000001   PAD
    0x20000076        -       0x00000002   Zero   RW          226    .bss.ADC_Time       flag_bit.o
    0x20000078        -       0x00000001   Zero   RW          214    .bss.Brightness_Flag  flag_bit.o
    0x20000079   0x080033da   0x00000001   PAD
    0x2000007a        -       0x00000002   Zero   RW          312    .bss.Buzzer_Counter  buzzer.o
    0x2000007c        -       0x00000001   Zero   RW          218    .bss.Buzzer_Flag    flag_bit.o
    0x2000007d        -       0x00000001   Zero   RW          234    .bss.Buzzer_Frequency  flag_bit.o
    0x2000007e        -       0x00000001   Zero   RW          313    .bss.Buzzer_Scan.buzzer_lock  buzzer.o
    0x2000007f        -       0x00000001   Zero   RW          192    .bss.Buzzer_Task.buzzer_step  task.o
    0x20000080        -       0x00000001   Zero   RW          193    .bss.Buzzer_Task.gear_position_last  task.o
    0x20000081        -       0x00000001   Zero   RW          194    .bss.Buzzer_Task.ring_frequency  task.o
    0x20000082        -       0x00000002   Zero   RW          195    .bss.Buzzer_Task.sound_frequency  task.o
    0x20000084        -       0x00000002   Zero   RW          221    .bss.Buzzer_Time    flag_bit.o
    0x20000086   0x080033da   0x00000002   PAD
    0x20000088        -       0x00000004   Zero   RW          236    .bss.Charge_Current  flag_bit.o
    0x2000008c        -       0x00000001   Zero   RW          212    .bss.Charge_Flag    flag_bit.o
    0x2000008d        -       0x00000001   Zero   RW          186    .bss.Charge_Task.charge_step  task.o
    0x2000008e        -       0x00000002   Zero   RW          222    .bss.Charge_Time    flag_bit.o
    0x20000090        -       0x00000004   Zero   RW          231    .bss.Charge_Voltage  flag_bit.o
    0x20000094        -       0x00000002   Zero   RW          239    .bss.Charger_Detection_1ms  flag_bit.o
    0x20000096   0x080033da   0x00000002   PAD
    0x20000098        -       0x00000004   Zero   RW          201    .bss.Conditional_Judgment.battery_voltage_last  task.o
    0x2000009c        -       0x00000001   Zero   RW          189    .bss.Flashlight_Bright.flashlight_bright_step  task.o
    0x2000009d        -       0x00000001   Zero   RW          191    .bss.Flashlight_Detection.gear_position_last  task.o
    0x2000009e        -       0x00000002   Zero   RW          235    .bss.Flashlight_Detection_Time  flag_bit.o
    0x200000a0        -       0x00000001   Zero   RW          213    .bss.Flashlight_Flag  flag_bit.o
    0x200000a1        -       0x00000001   Zero   RW          190    .bss.Flashlight_Task.flashlight_flag_last  task.o
    0x200000a2        -       0x00000002   Zero   RW          223    .bss.Flashlight_Time  flag_bit.o
    0x200000a4        -       0x00000001   Zero   RW          216    .bss.Footpad_Activation_Flag  flag_bit.o
    0x200000a5        -       0x00000001   Zero   RW          232    .bss.Gear_Position  flag_bit.o
    0x200000a6        -       0x00000002   Zero   RW          296    .bss.KEY1_Scan.key1_cnt  key.o
    0x200000a8        -       0x00000002   Zero   RW          297    .bss.KEY1_Scan.key1_cnt_2  key.o
    0x200000aa        -       0x00000002   Zero   RW          298    .bss.KEY1_Scan.key1_num  key.o
    0x200000ac        -       0x00000001   Zero   RW          295    .bss.KEY1_Scan.key1_st  key.o
    0x200000ad        -       0x00000001   Zero   RW          294    .bss.KEY1_State     key.o
    0x200000ae        -       0x00000002   Zero   RW          247    .bss.LED_Counter    led.o
    0x200000b0        -       0x00000001   Zero   RW          215    .bss.Lightbar_Mode_Flag  flag_bit.o
    0x200000b1        -       0x00000001   Zero   RW          217    .bss.Power_Display_Flag  flag_bit.o
    0x200000b2        -       0x00000001   Zero   RW          211    .bss.Power_Flag     flag_bit.o
    0x200000b3        -       0x00000001   Zero   RW          184    .bss.Power_Task.power_flag_last  task.o
    0x200000b4        -       0x00000001   Zero   RW          185    .bss.Power_Task.power_step  task.o
    0x200000b5   0x080033da   0x00000001   PAD
    0x200000b6        -       0x00000002   Zero   RW          224    .bss.Power_Time     flag_bit.o
    0x200000b8        -       0x00000001   Zero   RW          238    .bss.Shutdown_Cnt   flag_bit.o
    0x200000b9        -       0x00000001   Zero   RW          228    .bss.Shutdown_Time_M  flag_bit.o
    0x200000ba        -       0x00000002   Zero   RW          227    .bss.Shutdown_Time_S  flag_bit.o
    0x200000bc        -       0x00000001   Zero   RW           34    .bss.USART1_IRQHandler.count  hk32f030m_it.o
    0x200000bd        -       0x00000001   Zero   RW          219    .bss.Usart_Flag     flag_bit.o
    0x200000be        -       0x00000001   Zero   RW          196    .bss.Usart_Task.usart_step  task.o
    0x200000bf   0x080033da   0x00000001   PAD
    0x200000c0        -       0x00000002   Zero   RW          225    .bss.Usart_Time     flag_bit.o
    0x200000c2        -       0x00000002   Zero   RW          220    .bss.VESC_Boot_Time  flag_bit.o
    0x200000c4        -       0x00000100   Zero   RW          106    .bss.VESC_RX_Buff   vesc_uasrt.o
    0x200001c4        -       0x00000001   Zero   RW          103    .bss.VESC_RX_Flag   vesc_uasrt.o
    0x200001c5   0x080033da   0x00000003   PAD
    0x200001c8        -       0x000000f0   Zero   RW           66    .bss.WS2812_Buff    ws2812.o
    0x200002b8        -       0x00000001   Zero   RW          183    .bss.WS2812_Charge.cnt  task.o
    0x200002b9   0x080033da   0x00000001   PAD
    0x200002ba        -       0x00000002   Zero   RW           65    .bss.WS2812_Counter  ws2812.o
    0x200002bc        -       0x00000001   Zero   RW          233    .bss.WS2812_Measure  flag_bit.o
    0x200002bd   0x080033da   0x00000003   PAD
    0x200002c0        -       0x0000002c   Zero   RW          105    .bss.data           vesc_uasrt.o
    0x200002ec        -       0x00000001   Zero   RW          188    .bss.flashlight_flag_last_2  task.o
    0x200002ed        -       0x00000100   Zero   RW          104    .bss.protocol_buff  vesc_uasrt.o
    0x200003ed        -       0x00000001   Zero   RW          187    .bss.val            task.o
    0x200003ee   0x080033da   0x00000002   PAD
    0x200003f0        -       0x00000200   Zero   RW            2    HEAP                keil_startup_hk32f030m.o
    0x200005f0        -       0x00000200   Zero   RW            1    STACK               keil_startup_hk32f030m.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       260         24          0          0          0       3034   adc.o
       100          8          0          0          3       2256   buzzer.o
        44          4        512          0          0        828   crc.o
         0          0          0          1         50       1334   flag_bit.o
       164          8          0          0          0       7580   hk32f030m_adc.o
       168          0          0          0          0       6660   hk32f030m_gpio.o
       282         52          0          0          1       2034   hk32f030m_it.o
        80         12          0          0          0       2674   hk32f030m_misc.o
       308         44         40          0          0       9847   hk32f030m_rcc.o
       320         32          0          0          0      28059   hk32f030m_tim.o
       238         16          0          0          0      11479   hk32f030m_usart.o
        88          8          0          0          0       2123   io_ws2812.o
        56         26        192          0       1024        768   keil_startup_hk32f030m.o
       296         34          0          0          8       2387   key.o
        92          0          0          0          2       1975   led.o
       144         20          0          0          0       2865   led_pwm.o
       104          8          0          0          0       1001   main.o
        68          4          0          0          0       1910   power.o
       240         20          0          0          0       2865   system_hk32f030m.o
      3624        552         52          1         24      12296   task.o
        80          8          0          0          0       2224   time.o
       196         16          0          0          0       3709   usart.o
       524         32          0          0        557       9937   vesc_uasrt.o
       168          8          0          0        242       2505   ws2812.o

    ----------------------------------------------------------------------
      7660        936        828          4       1932     122350   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        16          0          0          2         21          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         68   aeabi_memset4.o
       502          0          0          0          0         92   aeabi_sdivfast.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        64          0          0          0          0        108   rt_memclr.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        46          0          0          0          0         60   cmpret.o
       124          4          0          0          0         72   d2f.o
       856         20          0          0          0        208   daddsub.o
        92          0          0          0          0        272   dcmp.o
       160          6          0          0          0         76   dcmpin.o
       108         10          0          0          0         72   dfixi.o
        88          0          0          0          0         92   dflti.o
       100          4          0          0          0         92   dgef.o
       100          4          0          0          0         92   dlef.o
       584         26          0          0          0         84   dmul.o
        20          6          0          0          0         68   dnan2.o
        84          4          0          0          0         60   f2d.o
       348          8          0          0          0        160   faddsub.o
        70          0          0          0          0        204   fcmp.o
       100          4          0          0          0         68   fcmpin.o
       352         10         64          0          0         92   fdiv.o
        76          0          0          0          0         68   ffixi.o
        94          0          0          0          0         92   fflti.o
        84          4          0          0          0         76   fgef.o
        84          4          0          0          0         76   flef.o
       176          4          0          0          0         80   fmul.o
        16          6          0          0          0         68   fnan2.o
        94          0          0          0          0         68   retnan.o
         0          0          0          0          0          0   usenofp.o

    ----------------------------------------------------------------------
      4716        140         64          0         96       3116   Library Totals
        10          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       850         16          0          0         96        816   c_p.l
      3856        124         64          0          0       2300   fz_ps.l

    ----------------------------------------------------------------------
      4716        140         64          0         96       3116   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     12376       1076        892          4       2028     123482   Grand Totals
     12376       1076        892          4       2028     123482   ELF Image Totals
     12376       1076        892          4          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                13268 (  12.96kB)
    Total RW  Size (RW Data + ZI Data)              2032 (   1.98kB)
    Total ROM Size (Code + RO Data + RW Data)      13272 (  12.96kB)

==============================================================================

